[{"C:\\Users\\PC-01\\Desktop\\project3 final\\Project-3\\client\\src\\index.js":"1","C:\\Users\\PC-01\\Desktop\\project3 final\\Project-3\\client\\src\\App.js":"2","C:\\Users\\PC-01\\Desktop\\project3 final\\Project-3\\client\\src\\pages\\Home.js":"3","C:\\Users\\PC-01\\Desktop\\project3 final\\Project-3\\client\\src\\pages\\Signup.js":"4","C:\\Users\\PC-01\\Desktop\\project3 final\\Project-3\\client\\src\\pages\\Login.js":"5","C:\\Users\\PC-01\\Desktop\\project3 final\\Project-3\\client\\src\\pages\\Profile.js":"6","C:\\Users\\PC-01\\Desktop\\project3 final\\Project-3\\client\\src\\components\\Navbar.js":"7","C:\\Users\\PC-01\\Desktop\\project3 final\\Project-3\\client\\src\\components\\Post.js":"8","C:\\Users\\PC-01\\Desktop\\project3 final\\Project-3\\client\\src\\components\\RhythmFilter.js":"9","C:\\Users\\PC-01\\Desktop\\project3 final\\Project-3\\client\\src\\components\\Feed.js":"10","C:\\Users\\PC-01\\Desktop\\project3 final\\Project-3\\client\\src\\components\\InstrumentList.js":"11","C:\\Users\\PC-01\\Desktop\\project3 final\\Project-3\\client\\src\\utils\\auth.js":"12","C:\\Users\\PC-01\\Desktop\\project3 final\\Project-3\\client\\src\\utils\\mutations.js":"13","C:\\Users\\PC-01\\Desktop\\project3 final\\Project-3\\client\\src\\utils\\queries.js":"14","C:\\Users\\PC-01\\Desktop\\project3 final\\Project-3\\client\\src\\components\\Socialsignup.js":"15","C:\\Users\\PC-01\\Desktop\\project3 final\\Project-3\\client\\src\\components\\Comment.js":"16","C:\\Users\\PC-01\\Desktop\\project3 final\\Project-3\\client\\src\\components\\RhythmList.js":"17","C:\\Users\\PC-01\\Desktop\\project3 final\\Project-3\\client\\src\\pages\\ProfileEdit.js":"18"},{"size":222,"mtime":1636827158882,"results":"19","hashOfConfig":"20"},{"size":2016,"mtime":1637297120810,"results":"21","hashOfConfig":"20"},{"size":1055,"mtime":1637295349036,"results":"22","hashOfConfig":"20"},{"size":5193,"mtime":1637295349042,"results":"23","hashOfConfig":"20"},{"size":3679,"mtime":1637295349038,"results":"24","hashOfConfig":"20"},{"size":2858,"mtime":1637295349041,"results":"25","hashOfConfig":"20"},{"size":1765,"mtime":1637295349022,"results":"26","hashOfConfig":"20"},{"size":5186,"mtime":1637297374471,"results":"27","hashOfConfig":"20"},{"size":685,"mtime":1637295349028,"results":"28","hashOfConfig":"20"},{"size":3437,"mtime":1637295991660,"results":"29","hashOfConfig":"20"},{"size":826,"mtime":1637295349020,"results":"30","hashOfConfig":"20"},{"size":1043,"mtime":1637295349052,"results":"31","hashOfConfig":"20"},{"size":2186,"mtime":1637295349056,"results":"32","hashOfConfig":"20"},{"size":1287,"mtime":1637295349057,"results":"33","hashOfConfig":"20"},{"size":595,"mtime":1637295349031,"results":"34","hashOfConfig":"20"},{"size":4797,"mtime":1637295349017,"results":"35","hashOfConfig":"20"},{"size":744,"mtime":1637295349029,"results":"36","hashOfConfig":"20"},{"size":5461,"mtime":1637298325623,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"b6jmbs",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"40"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\PC-01\\Desktop\\project3 final\\Project-3\\client\\src\\index.js",[],["84","85"],"C:\\Users\\PC-01\\Desktop\\project3 final\\Project-3\\client\\src\\App.js",[],"C:\\Users\\PC-01\\Desktop\\project3 final\\Project-3\\client\\src\\pages\\Home.js",["86","87"],"import React from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport RhythmFilter from '../components/RhythmFilter';\nimport Feed from '../components/Feed';\n\n\n\nimport Auth from '../utils/auth';\n\nconst Home = () => {\n    const loading = false\n      if (!Auth.loggedIn()) {\n        return <Redirect to=\"/login\" />;\n      }\n\n  return (\n    <main className=\"w-screen\">\n          {loading ? (\n            <div>Loading...</div>\n          ) : (\n<>\n<div className=\"flex justify-center w-screen\">\n  <div className=\"w-full xl:w-1/2 w-screen mt-20 mb-6 ml-6 mr-10\">\n  <div className=\"p-8 flex items-center justify-between \">\n        <h1 className=\"mb-4 text-3xl font-extrabold text-gray-700\">Posts</h1>\n        <a href=\"/Post/new\" className=\"rounded-lg border-2 bg-black border-black mr-6 text-white hover:bg-blue-600 hover:border-blue-600 p-2 font-medium\">CREATE NEW POST</a>   \n    </div>\n    <Feed />\n  </div>\n  <RhythmFilter />\n</div>\n        \n</>\n          )}\n</main>\n  );\n};\n\nexport default Home;\n","C:\\Users\\PC-01\\Desktop\\project3 final\\Project-3\\client\\src\\pages\\Signup.js",[],"C:\\Users\\PC-01\\Desktop\\project3 final\\Project-3\\client\\src\\pages\\Login.js",[],"C:\\Users\\PC-01\\Desktop\\project3 final\\Project-3\\client\\src\\pages\\Profile.js",["88","89","90"],"import React from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport { QUERY_USER, QUERY_ME } from '../utils/queries';\nimport InstrumentList from '../components/InstrumentList';\nimport Feed from '../components/Feed';\n\n\nimport Auth from '../utils/auth';\n\nconst Profile = () => {\n  const { userName } = useParams();\n\n  const { loading, data } = useQuery(QUERY_USER, {\n    variables: { userName },\n  });\n\n  // Enable Editting if userParam matches username\n  let canEdit = false\n  if (Auth.loggedIn() && Auth.getProfile().data.userName === userName) {\n    console.log(\"You can edit this profile now\")\n    canEdit = true;\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!Auth.loggedIn()) {\n    return (\n      <h4>\n        You need to be logged in to see this. Use the navigation links above to\n        sign up or log in!\n      </h4>\n    );\n  }\n\n  return (\n    <div className=\"flex justify-center w-screen\">\n\n    <div className=\"bg-white p-6 mt-24 border-2 border-grey-500 rounded-lg shadow-xl w-1/4 h-3/4\">\n     <h1 className=\"text-2xl  text-gray-700 font-bold\">{userName}'s Profile</h1>    \n     <div className=\"image overflow-hidden\">{canEdit && (<a href=\"/profileEdit\" title=\"Click to change profile picture\">Edit Profile</a>)}<img className=\"h-auto w-full mx-auto rounded-full\" src={data.user.img} alt=\"profilepic\"/>\n     </div>\n     <h1 className=\"text-gray-900 font-bold text-xl leading-8 my-1\">{`${data.user.firstName} ${data.user.lastName}`}</h1>\n     <h3 className=\"text-blue-600 font-lg text-semibold leading-6 mb-2\">Username: <span className=\"text-black\">{data.user.userName}</span></h3>\n     <p className=\"text-lg text-grey-500 leading-6 font-semibold\">About me: </p><span className=\"font-small text-base\">{data.user.bio}</span>\n     <div class=\"items-center space-x-3 font-bold text-2xl leading-8 mt-4\">\n     <h1>Instruments</h1>\n   </div>\n\n   <div class=\"flex items-center space-x-3 font-semibold text-gray-900 text-2xl leading-8 mb-4 underline\">\n     </div>\n     {/* {data.user.instrument} */}\n     {data.user.instruments.map((instrument) => {\n           return (<div class=\"grid grid-cols-3 gap-1 mb-2\">\n               <div class=\"rounded-lg bg-yellow-500 text-center\">{instrument.name}</div>\n           </div>)\n     })}\n \n       </div>\n       <div className=\"ml-20 w-2/4 mb-10 mt-24\">\n           <div className=\"p-3\">\n               <div className=\"flex items-center space-x-2 text-gray-900 leading-8\">\n                   <span className=\"tracking-wide text-xl font-semibold ml-10\">Previous Posts</span>\n               </div>\n               <div className=\"text-gray-700 \">\n           \n           <Feed user={data.user._id}/>          \n           \n           </div>\n       </div>\n   </div>\n </div>\n\n\n\n\n\n           \n   \n\n \n     \n\n\n);\n};\n\n\nexport default Profile;\n","C:\\Users\\PC-01\\Desktop\\project3 final\\Project-3\\client\\src\\components\\Navbar.js",[],"C:\\Users\\PC-01\\Desktop\\project3 final\\Project-3\\client\\src\\components\\Post.js",["91","92","93","94","95"],"import React, {useState} from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { QUERY_RHYTHMS, QUERY_POST } from '../utils/queries';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { UPDATE_POST, ADD_POST } from '../utils/mutations';\nimport { useParams } from 'react-router-dom';\n\nimport Auth from '../utils/auth';\n\nconst Post = () => {\n\n\n\n    const { postId } = useParams();\n\n    const {loading: rhythmLoad, data: rhythmData} = useQuery(QUERY_RHYTHMS);\n    const {loading: postLoad, data: postData} = useQuery(QUERY_POST, {\n            variables: {postId: postId}\n        });\n\n    const [formState, setFormState] = useState({\n            content: \"\",\n            url: \"\",\n            title: \"\",\n            rhythm: \"\"\n          });\n\n\n        //   const [formState, setFormState] = useState({\n        //     ...postData\n        //   });\n\n    const [addPost, { error: addError, data: addData }] = useMutation(ADD_POST);\n    const [updatePost, { error: updateError, data: updateData }] = useMutation(UPDATE_POST);\n    \n    if (!Auth.loggedIn()) {\n        return <Redirect to=\"/login\" />;\n      }\n      \n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setFormState({\n            ...formState,\n            [name]: value,\n        });\n        };\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        console.log(formState);\n\n        try {\n            if(postData.post._id){\n                const userId = postData.post.user._id\n                console.log(userId)\n                 await updatePost({\n                    variables: { ...formState, user:postData.post.user._id, _id:postData.post._id  },\n                    });\n                    console.log(\"UpdatePost\")\n                    return <Redirect to=\"/profile/me\" />;\n            } else {\n                 await addPost({\n                    variables: { ...formState },\n                    });\n                    console.log(\"AddPost\")\n                    return <Redirect to=\"/\" />;\n            }\n\n            \n            \n        } catch (e) {\n            console.error(e);\n        }\n        };\n\n\nlet canEdit\nlet rhythmId = null\n   if (postLoad || rhythmLoad) {\n    return <div>Loading...</div>;\n  }\n\n  if (postData.post._id){\n        canEdit = true;\n        rhythmId = postData.post.rhythm._id\n   } else {\n        canEdit = false\n   }\n\n\nreturn (\n<div className=\"py-24\">\n    <div className=\"max-w-5xl mx-auto sm:px-6 lg:px-8 \">\n        <div className=\"bg-white border-2 overflow-hidden shadow-lg sm:rounded-lg\">\n            <div className=\"p-6 bg-white\">\n                <h1 className=\"np-title mb-8 text-3xl font-bold\">{canEdit ? \"EDIT POST\" : \"NEW POST\"}</h1>\n                <form id='newPost-form' onSubmit={handleFormSubmit}>\n                    <div className=\"mb-4\">\n                        <label className=\"text-xl text-gray-600\">Title<span className=\"text-red-500\">*</span></label>\n                        <input type=\"text\" onLoad={handleChange} onChange={handleChange} className=\"rounded-lg border-2 border-gray-300 p-2 w-full\" name=\"title\" id=\"title\" defaultValue={canEdit ? postData.post.title : \"\"} required />\n                    </div>\n                    <div>\n                        <label className=\"text-xl text-gray-600\">Rhythm</label>\n                        <select id='rhythm' name=\"rhythm\" onLoad={handleChange} onChange={handleChange} className=\"w-full py-4 border-gray-300 rounded-md shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" defaultValue={rhythmId} >\n                \n                                    {(rhythmData.rhythms.map((rhythm, index)=> {\n                                        return (<option key={index} value={rhythm._id}>{rhythm.name}</option>)\n                                    }))}\n                        </select>\n                    </div>\n                    <div className=\"mb-4\">\n                        <label className=\"text-xl text-gray-600\">Content<span className=\"text-red-500\">*</span></label>\n                        <div>\n                        \n                        <textarea defaultValue={postData ? postData.post.content : \"\"} onLoad={handleChange} onChange={handleChange}  id='content' name=\"content\" className=\"rounded-lg border-2 border-gray-500\">\n                                \n                        </textarea>\n                        </div>\n                    </div>\n                    <div className=\"mb-8\">\n                        <label className=\"text-xl text-gray-600\">URL</label>\n                        <input type=\"text\" onLoad={handleChange} onChange={handleChange} className=\"rounded-lg border-2 border-gray-300 p-2 w-full\" defaultValue={postData.post.url} name=\"url\" id=\"url\" placeholder=\"(Optional)\"/>\n                    </div>\n                    <div className=\"flex flex-row-reverse p-1\">\n                        <button type=\"submit\" className=\"w-3/12 rounded-lg p-3 bg-black text-white hover:bg-yellow-500\" required>Submit</button>\n                    </div>\n                </form>    \n            </div>\n        </div>\n    </div>\n</div>\n)}\n\nexport default Post;","C:\\Users\\PC-01\\Desktop\\project3 final\\Project-3\\client\\src\\components\\RhythmFilter.js",["96"],"import React from 'react';\nimport { QUERY_RHYTHMS } from '../utils/queries';\nimport { useQuery } from '@apollo/client';\n\nconst RhythmFilter = () => {\n\n    const { loading, data } = useQuery(QUERY_RHYTHMS);\n\n\n  return (\n    <div className=\"hidden w-1/3 lg:block border-solid border-black flex justify-end mt-20 \">\n                  {loading ? (\n            <div>Loading...</div>\n          ) : (\n    <div className=\"p-8\">\n        <h1 className=\"ml-8 mb-6 text-2xl font-bold text-gray-500 \">Sponsored</h1>\n        <div className=\"flex flex-col max-w-sm px-4 py-6 mx-auto bg-white rounded-lg shadow-md\">\n           \n        </div>\n    </div>)}\n    </div>\n\n)};\n\nexport default RhythmFilter;","C:\\Users\\PC-01\\Desktop\\project3 final\\Project-3\\client\\src\\components\\Feed.js",["97"],"import React, {useEffect, useState} from 'react';\nimport { QUERY_POSTS } from '../utils/queries';\nimport { useQuery } from '@apollo/client';\nimport InstrumentList from './InstrumentList'\nimport RhythmList from './RhythmList'\nimport Comment from \"./Comment\"\n\nimport Auth from '../utils/auth';\n\nconst Feed = (props) => {\n\n    const {user} = props\n \n    const [rhythms, setRhythms] = useState(window.localStorage.getItem('rhythmFilters') || [])\n    const [instruments, setInstruments] = useState(JSON.parse(window.localStorage.getItem('instrumentFilters')) || [])\n    const [posts, setPosts] = useState([])\n    const [filteredPosts, setfilteredPosts] = useState([])\n\n    const instrumentFilterHandle = (event) => {\n        setInstruments(event)\n    }\n    const rhythmFilterHandle = (event) => {\n        setRhythms(event)\n    }\n\n    const { loading, data } = useQuery(QUERY_POSTS, {variables: {user}});\n\n    useEffect(()=> {\n       setPosts(data?.posts)\n       setfilteredPosts(data?.posts)\n    },[data])\n\n\n    useEffect(()=>{\n        console.log(instruments)\n        console.log(rhythms)\n\n        const newPosts = posts.filter((post) => {\n            let inst = false\n            for ( let i=0; i < rhythms.length; i++){\n                console.log(rhythms[i].value)\n                if (rhythms[i].value === post.rhythm._id){\n                    inst =  true;\n                }\n            }\n            let rhyth = false\n            for ( let j=0; j < instruments.length; j++){\n                for (let k=0; k < post.user.instruments.length; k++){\n                \n                if (instruments[j].value === post.user.instruments[k]._id){\n                    rhyth = true;\n                }\n            }\n        }\n            return inst && rhyth\n        })\n\n        console.log(newPosts)\n        setfilteredPosts(newPosts)\n    },[instruments, rhythms])\n\n    if (loading) {\n        return <div>Loading...</div>\n    }\n\n\n    return (\n\n<div className=\"max-w-4xl px-10 mx-auto mb-4\"> \n    \n        <>\n               <div className=\"flex space-x-2 my-4\">\n               \n                <RhythmList filterList={rhythms} filterHandle={rhythmFilterHandle}/>\n                <InstrumentList filterList={instruments} filterHandle={instrumentFilterHandle}/>\n            </div>\n            {filteredPosts.map((post) => {\n        \n                return (<><div  className=\"max-w-4xl px-10 py-6 mx-auto bg-white rounded-lg shadow-md mb-4\">\n\n                            <div className=\"flex items-center justify-between\"><span className=\"font-light text-gray-600\">{post.dateCreated} by: {post.user.userName}</span>\n                            {post.user._id === Auth.getProfile().data._id ? (<a href={`/Post/${post._id}`} className=\"text-sm text-blue-500 underline\">edit</a>) : \"\"}\n                            </div>\n                            <div className=\"mt-2\"><a href=\"/\" className=\"text-2xl font-bold text-gray-700 hover:underline\">{post.title}</a>\n                                <div className=\"text-blue-700\">#{post.rhythm.name}</div>\n                                <div>{post.content}</div>\n                                <div><a className=\"text-blue-700 underline\" target=\"_blank\" href=\"{{{post.url}}}\">{post.url}</a></div>\n                            </div>\n                            <Comment data={post.comments} postId={post._id}/>\n                        </div></>)\n            })}\n        </>\n  \n</div>\n)};\nexport default Feed;","C:\\Users\\PC-01\\Desktop\\project3 final\\Project-3\\client\\src\\components\\InstrumentList.js",["98"],"import React, {useState} from 'react';\nimport { QUERY_INSTRUMENTS } from '../utils/queries';\nimport { useQuery } from '@apollo/client';\nimport { MultiSelect } from \"react-multi-select-component\";\n\nconst InstrumentList = ({filterList, filterHandle}) => {\n\n    // const [selected, setSelected] = useState();\n    const { loading, data } = useQuery(QUERY_INSTRUMENTS);\n\n    if (loading) {\n        return <div>Loading...</div>;\n      }\n\n      const allInstruments = data.instruments.map((instrument) =>{ return {\n        value: instrument._id,\n        label: instrument.name\n    }})\n\n  return ( \n<div className=\"w-1/3\">\n<MultiSelect \n        options={allInstruments}\n        name=\"instruments\"\n        value={filterList}\n        onChange={filterHandle}\n        labelledBy=\"Select\"\n/>\n</div>\n\n)\n  };\n  export default InstrumentList;","C:\\Users\\PC-01\\Desktop\\project3 final\\Project-3\\client\\src\\utils\\auth.js",[],"C:\\Users\\PC-01\\Desktop\\project3 final\\Project-3\\client\\src\\utils\\mutations.js",[],"C:\\Users\\PC-01\\Desktop\\project3 final\\Project-3\\client\\src\\utils\\queries.js",[],"C:\\Users\\PC-01\\Desktop\\project3 final\\Project-3\\client\\src\\components\\Socialsignup.js",["99","100","101"],"import React from 'react';\nimport \"./socialsignup.css\"\n// import { useQuery } from '@apollo/client';\n\nfunction Socialsignup(){\nreturn(\n    <div>\n <div class=\"login-box-social-section rounded-lg\">\n <div class=\"login-box-social-section-inner\">\n   <span class=\"login-box-social-headline\">Sign in with<br />your social network</span>\n   <a class=\"login-box-social-button-facebook\">Log in with Facebook</a>\n   <a class=\"login-box-social-button-twitter\">Log in with Twitter</a>\n   <a class=\"login-box-social-button-google\">Log in with Google+</a>\n </div>\n</div>\n</div>\n)\n}\nexport default Socialsignup;","C:\\Users\\PC-01\\Desktop\\project3 final\\Project-3\\client\\src\\components\\Comment.js",["102","103","104","105","106","107","108","109","110"],"import React, {useState} from 'react';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { UPDATE_COMMENT, ADD_COMMENT, DELETE_COMMENT } from '../utils/mutations';\n\n\nconst Comment = ({data, postId}) => {\n\n    const [addComment, { error: addError, data: addData }] = useMutation(ADD_COMMENT);\n    const [updateComment, { error: updateError, data: updateData }] = useMutation(UPDATE_COMMENT);\n    const [deleteComment, { error: deleteError, data: deleteData }] = useMutation(DELETE_COMMENT);\n\n    const [commentState, setCommentState] = useState([...data]);\n\n    const activeUser = Auth.getProfile().data._id\n    \n    const postComment = async (event) => {\n        let content\n        event.preventDefault();\n        if(event.code === \"Enter\" || event.code === \"NumpadEnter\"){\n           content = event.target.value       \n            if (content && activeUser){\n               const newComment = await addComment({variables: {\n                    content, activeUser, postId\n                }})\n                event.target.value = \"\"\n                setCommentState([...commentState, newComment.data.addComment ])\n            }\n        }\n        return true;\n    }\n    const editComment = async (event) => {\n        event.preventDefault();\n        const content = event.target.value;\n        const _id = event.target.dataValue;\n        // const commentInput = document.createElement(\"input\")\n        //     commentInput.type = \"submit\"\n        // <input type=\"submit\" onSubmit={postComment} name=\"editComment\" data-value=\"{{post.id}}\" id=\"comment\" placeholder=\"Add a comment!\" className=\"mt-4 w-full px-4 py-3 rounded-full bg-gray-200 mt-2 border focus:border-black focus:bg-white focus:outline-none \" autoComplete='true' required />\n\n        // event.target.parentNode.replaceChild(commentInput, event.target);\n\n        // if (content && activeUser){\n        //    return await updateComment({variable: {\n        //         content, activeUser, _id\n        //     }});\n        // }\n        return;\n    }    \n    \n    const removeComment = async (event) => {\n        event.preventDefault();\n        const _id = event.target.dataset.remove;;\n        if (activeUser){\n            await deleteComment({variables: {\n                _id,\n                postId\n            }});\n            const newState = commentState.filter(comment => comment._id !== _id )\n            setCommentState([...newState])   \n        }\n        return;\n    }\n\n    const commentToggleHandler = async (event) => {\n        // Stop the browser from submitting the form so we can do so with JavaScript\n            event.preventDefault();\n      \n            const commentBlock = event.target.nextElementSibling;\n            \n            const toggleBtn = event.target\n            \n            commentBlock.classList.toggle(\"hidden\");\n            if (commentBlock.classList.contains(\"hidden\")) {\n              toggleBtn.innerHTML = \"Show Comments\"\n            } else {\n              toggleBtn.innerHTML = \"Hide Comments\"\n            }\n        \n          };\n\n\nreturn (\n\n<div className=\"flex items-center justify-between mt-4\">\n    <button id=\"toggle-comments\" value=\"{{post.id}}\" onClick={commentToggleHandler} className=\"text-blue-500 hover:underline\">Show Comments</button>\n    <div className=\"hidden\" id=\"comments\">\n        <h1>Comments:</h1>\n        <>\n            {commentState ? commentState.map((comment) => {\n                return (\n                <>\n                    <div  className=\"float-left max-w-4xl px-10 py-4 mx-auto mb-2 bg-gray-200 rounded-lg shadow-md\">\n                        \n                        {comment.user._id === activeUser ? (<button onClick={removeComment} data-remove={comment._id} className=\"w-1/6 h-1/6\"><img alt=\"delComment\" data-remove={comment._id} src=\"trash-bin.png\" title=\"delComment\"className=\"w-7 h-7\"></img></button>): \"\"}\n                        {comment.user._id === activeUser ? (<button onClick={editComment} data-edit={comment._id} className=\"w-1/6 h-1/6\"><img alt=\"editComment\" data-edit={comment._id} src=\"edit.png\" title=\"editComment\"className=\"w-7 h-7\"></img></button>): \"\"}\n\n                        <h3 className=\"italic text-grey-200 text-sm\">{comment.user.userName} on {comment.dateCreated}</h3>\n                        <p className=\" float-left font-semibold\">{comment.content}</p>\n                    </div>\n\n                </>    )\n            }) :\"\"}\n            <div className=\"mb-4 rounded-full\">\n                <input type=\"text\" onKeyUpCapture={postComment}  name=\"comment\" id=\"comment\" placeholder=\"Add a comment!\" className=\"mt-4 w-full px-4 py-3 rounded-full bg-gray-200 mt-2 border focus:border-black focus:bg-white focus:outline-none \" />\n            </div>\n        </>\n    </div>\n</div>)}\n\nexport default Comment;\n\n","C:\\Users\\PC-01\\Desktop\\project3 final\\Project-3\\client\\src\\components\\RhythmList.js",["111","112"],"import React, {useState, useEffect} from 'react';\nimport { QUERY_RHYTHMS } from '../utils/queries';\nimport { useQuery } from '@apollo/client';\nimport { MultiSelect } from \"react-multi-select-component\";\n\nconst RhythmList = ({filterList, filterHandle}) => {\n\n\n    const { loading, data } = useQuery(QUERY_RHYTHMS);\n\n\n    if (loading) {\n        return <div>Loading...</div>;\n      }\n\n      const allRhythms = data.rhythms.map((rhythm) =>{ return {\n        value: rhythm._id,\n        label: rhythm.name\n    }})\n\n  return ( \n<div className=\"w-1/3\">\n<MultiSelect \n        options={allRhythms}\n        name=\"rhythms\"\n        value={filterList}\n        onChange={filterHandle}\n        labelledBy=\"Select\"\n/>\n</div>\n\n)\n  };\n  export default RhythmList;","C:\\Users\\PC-01\\Desktop\\project3 final\\Project-3\\client\\src\\pages\\ProfileEdit.js",["113","114","115","116"],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":2,"column":20,"nodeType":"123","messageId":"124","endLine":2,"endColumn":29},{"ruleId":"121","severity":1,"message":"125","line":3,"column":10,"nodeType":"123","messageId":"124","endLine":3,"endColumn":18},{"ruleId":"121","severity":1,"message":"126","line":2,"column":10,"nodeType":"123","messageId":"124","endLine":2,"endColumn":18},{"ruleId":"121","severity":1,"message":"127","line":5,"column":22,"nodeType":"123","messageId":"124","endLine":5,"endColumn":30},{"ruleId":"121","severity":1,"message":"128","line":6,"column":8,"nodeType":"123","messageId":"124","endLine":6,"endColumn":22},{"ruleId":"121","severity":1,"message":"129","line":2,"column":20,"nodeType":"123","messageId":"124","endLine":2,"endColumn":24},{"ruleId":"121","severity":1,"message":"130","line":33,"column":30,"nodeType":"123","messageId":"124","endLine":33,"endColumn":38},{"ruleId":"121","severity":1,"message":"131","line":33,"column":46,"nodeType":"123","messageId":"124","endLine":33,"endColumn":53},{"ruleId":"121","severity":1,"message":"132","line":34,"column":33,"nodeType":"123","messageId":"124","endLine":34,"endColumn":44},{"ruleId":"121","severity":1,"message":"133","line":34,"column":52,"nodeType":"123","messageId":"124","endLine":34,"endColumn":62},{"ruleId":"121","severity":1,"message":"134","line":7,"column":22,"nodeType":"123","messageId":"124","endLine":7,"endColumn":26},{"ruleId":"135","severity":1,"message":"136","line":60,"column":7,"nodeType":"137","endLine":60,"endColumn":29,"suggestions":"138"},{"ruleId":"121","severity":1,"message":"139","line":1,"column":16,"nodeType":"123","messageId":"124","endLine":1,"endColumn":24},{"ruleId":"140","severity":1,"message":"141","line":11,"column":4,"nodeType":"142","endLine":11,"endColumn":48},{"ruleId":"140","severity":1,"message":"141","line":12,"column":4,"nodeType":"142","endLine":12,"endColumn":47},{"ruleId":"140","severity":1,"message":"141","line":13,"column":4,"nodeType":"142","endLine":13,"endColumn":46},{"ruleId":"121","severity":1,"message":"130","line":9,"column":33,"nodeType":"123","messageId":"124","endLine":9,"endColumn":41},{"ruleId":"121","severity":1,"message":"131","line":9,"column":49,"nodeType":"123","messageId":"124","endLine":9,"endColumn":56},{"ruleId":"121","severity":1,"message":"143","line":10,"column":12,"nodeType":"123","messageId":"124","endLine":10,"endColumn":25},{"ruleId":"121","severity":1,"message":"132","line":10,"column":36,"nodeType":"123","messageId":"124","endLine":10,"endColumn":47},{"ruleId":"121","severity":1,"message":"133","line":10,"column":55,"nodeType":"123","messageId":"124","endLine":10,"endColumn":65},{"ruleId":"121","severity":1,"message":"144","line":11,"column":36,"nodeType":"123","messageId":"124","endLine":11,"endColumn":47},{"ruleId":"121","severity":1,"message":"145","line":11,"column":55,"nodeType":"123","messageId":"124","endLine":11,"endColumn":65},{"ruleId":"121","severity":1,"message":"146","line":34,"column":15,"nodeType":"123","messageId":"124","endLine":34,"endColumn":22},{"ruleId":"121","severity":1,"message":"147","line":35,"column":15,"nodeType":"123","messageId":"124","endLine":35,"endColumn":18},{"ruleId":"121","severity":1,"message":"139","line":1,"column":16,"nodeType":"123","messageId":"124","endLine":1,"endColumn":24},{"ruleId":"121","severity":1,"message":"148","line":1,"column":26,"nodeType":"123","messageId":"124","endLine":1,"endColumn":35},{"ruleId":"121","severity":1,"message":"129","line":2,"column":20,"nodeType":"123","messageId":"124","endLine":2,"endColumn":24},{"ruleId":"121","severity":1,"message":"128","line":6,"column":8,"nodeType":"123","messageId":"124","endLine":6,"endColumn":22},{"ruleId":"121","severity":1,"message":"149","line":15,"column":22,"nodeType":"123","messageId":"124","endLine":15,"endColumn":27},{"ruleId":"121","severity":1,"message":"133","line":15,"column":35,"nodeType":"123","messageId":"124","endLine":15,"endColumn":45},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'useQuery' is defined but never used.","'Redirect' is defined but never used.","'QUERY_ME' is defined but never used.","'InstrumentList' is defined but never used.","'Link' is defined but never used.","'addError' is assigned a value but never used.","'addData' is assigned a value but never used.","'updateError' is assigned a value but never used.","'updateData' is assigned a value but never used.","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'posts'. Either include it or remove the dependency array.","ArrayExpression",["152"],"'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'updateComment' is assigned a value but never used.","'deleteError' is assigned a value but never used.","'deleteData' is assigned a value but never used.","'content' is assigned a value but never used.","'_id' is assigned a value but never used.","'useEffect' is defined but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},"Update the dependencies array to be: [instruments, posts, rhythms]",{"range":"155","text":"156"},[1831,1853],"[instruments, posts, rhythms]"]