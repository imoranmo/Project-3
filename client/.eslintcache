
[{"C:\\Users\\Tina Ly\\Project-3\\client\\src\\index.js":"1","C:\\Users\\Tina Ly\\Project-3\\client\\src\\App.js":"2","C:\\Users\\Tina Ly\\Project-3\\client\\src\\pages\\Login.js":"3","C:\\Users\\Tina Ly\\Project-3\\client\\src\\pages\\Signup.js":"4","C:\\Users\\Tina Ly\\Project-3\\client\\src\\pages\\Profile.js":"5","C:\\Users\\Tina Ly\\Project-3\\client\\src\\pages\\Home.js":"6","C:\\Users\\Tina Ly\\Project-3\\client\\src\\components\\Post.js":"7","C:\\Users\\Tina Ly\\Project-3\\client\\src\\components\\Navbar.js":"8","C:\\Users\\Tina Ly\\Project-3\\client\\src\\components\\RhythmFilter.js":"9","C:\\Users\\Tina Ly\\Project-3\\client\\src\\components\\Socialsignup.js":"10","C:\\Users\\Tina Ly\\Project-3\\client\\src\\components\\Feed.js":"11","C:\\Users\\Tina Ly\\Project-3\\client\\src\\components\\InstrumentList.js":"12","C:\\Users\\Tina Ly\\Project-3\\client\\src\\utils\\auth.js":"13","C:\\Users\\Tina Ly\\Project-3\\client\\src\\utils\\mutations.js":"14","C:\\Users\\Tina Ly\\Project-3\\client\\src\\utils\\queries.js":"15","C:\\Users\\Tina Ly\\Project-3\\client\\src\\components\\RhythmList.js":"16","C:\\Users\\Tina Ly\\Project-3\\client\\src\\components\\Comment.js":"17","C:\\Users\\Tina Ly\\Project-3\\client\\src\\pages\\profileEdit.js":"18","C:\\Users\\Tina Ly\\Project-3\\client\\src\\pages\\ProfileEdit.js":"19"},{"size":222,"mtime":1637227297329,"results":"20","hashOfConfig":"21"},{"size":2034,"mtime":1637212298184,"results":"22","hashOfConfig":"21"},{"size":3633,"mtime":1637211637600,"results":"23","hashOfConfig":"21"},{"size":5193,"mtime":1637234975159,"results":"24","hashOfConfig":"21"},{"size":2858,"mtime":1637230804359,"results":"25","hashOfConfig":"21"},{"size":1055,"mtime":1637233279355,"results":"26","hashOfConfig":"21"},{"size":5186,"mtime":1637230076263,"results":"27","hashOfConfig":"21"},{"size":1764,"mtime":1637232743200,"results":"28","hashOfConfig":"21"},{"size":685,"mtime":1637233152428,"results":"29","hashOfConfig":"21"},{"size":595,"mtime":1637234606203,"results":"30","hashOfConfig":"21"},{"size":2174,"mtime":1637229755803,"results":"31","hashOfConfig":"21"},{"size":988,"mtime":1637220104195,"results":"32","hashOfConfig":"21"},{"size":1043,"mtime":1637211637601,"results":"33","hashOfConfig":"21"},{"size":2186,"mtime":1637211637602,"results":"34","hashOfConfig":"21"},{"size":1287,"mtime":1637211637602,"results":"35","hashOfConfig":"21"},{"size":928,"mtime":1637220059974,"results":"36","hashOfConfig":"21"},{"size":4797,"mtime":1637211637595,"results":"37","hashOfConfig":"21"},{"size":5365,"mtime":1637212027862,"results":"38","hashOfConfig":"21"},{"size":5453,"mtime":1637231929925,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1chomn6",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"42"},"C:\\Users\\Tina Ly\\Project-3\\client\\src\\index.js",[],["85","86"],"C:\\Users\\Tina Ly\\Project-3\\client\\src\\App.js",[],"C:\\Users\\Tina Ly\\Project-3\\client\\src\\pages\\Login.js",[],"C:\\Users\\Tina Ly\\Project-3\\client\\src\\pages\\Signup.js",[],"C:\\Users\\Tina Ly\\Project-3\\client\\src\\pages\\Profile.js",["87","88","89"],"import React from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport { QUERY_USER, QUERY_ME } from '../utils/queries';\nimport InstrumentList from '../components/InstrumentList';\nimport Feed from '../components/Feed';\n\n\nimport Auth from '../utils/auth';\n\nconst Profile = () => {\n  const { userName } = useParams();\n\n  const { loading, data } = useQuery(QUERY_USER, {\n    variables: { userName },\n  });\n\n  // Enable Editting if userParam matches username\n  let canEdit = false\n  if (Auth.loggedIn() && Auth.getProfile().data.userName === userName) {\n    console.log(\"You can edit this profile now\")\n    canEdit = true;\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!Auth.loggedIn()) {\n    return (\n      <h4>\n        You need to be logged in to see this. Use the navigation links above to\n        sign up or log in!\n      </h4>\n    );\n  }\n\n  return (\n    <div className=\"flex justify-center w-screen\">\n\n    <div className=\"bg-white p-6 mt-24 border-2 border-grey-500 rounded-lg shadow-xl w-1/4 h-3/4\">\n     <h1 className=\"text-2xl  text-gray-700 font-bold\">{userName}'s Profile</h1>    \n     <div className=\"image overflow-hidden\">{canEdit && (<a href=\"/profileEdit\" title=\"Click to change profile picture\">Edit Profile</a>)}<img className=\"h-auto w-full mx-auto rounded-full\" src={data.user.img} alt=\"profilepic\"/>\n     </div>\n     <h1 className=\"text-gray-900 font-bold text-xl leading-8 my-1\">{`${data.user.firstName} ${data.user.lastName}`}</h1>\n     <h3 className=\"text-blue-600 font-lg text-semibold leading-6 mb-2\">Username: <span className=\"text-black\">{data.user.userName}</span></h3>\n     <p className=\"text-lg text-grey-500 leading-6 font-semibold\">About me: </p><span className=\"font-small text-base\">{data.user.bio}</span>\n     <div class=\"items-center space-x-3 font-bold text-2xl leading-8 mt-4\">\n     <h1>Instruments</h1>\n   </div>\n\n   <div class=\"flex items-center space-x-3 font-semibold text-gray-900 text-2xl leading-8 mb-4 underline\">\n     </div>\n     {/* {data.user.instrument} */}\n     {data.user.instruments.map((instrument) => {\n           return (<div class=\"grid grid-cols-3 gap-1 mb-2\">\n               <div class=\"rounded-lg bg-yellow-500 text-center\">{instrument.name}</div>\n           </div>)\n     })}\n \n       </div>\n       <div className=\"ml-20 w-2/4 mb-10 mt-24\">\n           <div className=\"p-3\">\n               <div className=\"flex items-center space-x-2 text-gray-900 leading-8\">\n                   <span className=\"tracking-wide text-xl font-semibold ml-10\">Previous Posts</span>\n               </div>\n               <div className=\"text-gray-700 \">\n           \n           <Feed user={data.user._id}/>          \n           \n           </div>\n       </div>\n   </div>\n </div>\n\n\n\n\n\n           \n   \n\n \n     \n\n\n);\n};\n\n\nexport default Profile;\n","C:\\Users\\Tina Ly\\Project-3\\client\\src\\pages\\Home.js",["90","91"],"import React from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport RhythmFilter from '../components/RhythmFilter';\nimport Feed from '../components/Feed';\n\n\n\nimport Auth from '../utils/auth';\n\nconst Home = () => {\n    const loading = false\n      if (!Auth.loggedIn()) {\n        return <Redirect to=\"/login\" />;\n      }\n\n  return (\n    <main className=\"w-screen\">\n          {loading ? (\n            <div>Loading...</div>\n          ) : (\n<>\n<div className=\"flex justify-center w-screen\">\n  <div className=\"w-full xl:w-1/2 w-screen mt-20 mb-6 ml-6 mr-10\">\n  <div className=\"p-8 flex items-center justify-between \">\n        <h1 className=\"mb-4 text-3xl font-extrabold text-gray-700\">Posts</h1>\n        <a href=\"/Post/new\" className=\"rounded-lg border-2 bg-black border-black mr-6 text-white hover:bg-blue-600 hover:border-blue-600 p-2 font-medium\">CREATE NEW POST</a>   \n    </div>\n    <Feed />\n  </div>\n  <RhythmFilter />\n</div>\n        \n</>\n          )}\n</main>\n  );\n};\n\nexport default Home;\n","C:\\Users\\Tina Ly\\Project-3\\client\\src\\components\\Post.js",["92","93","94","95","96"],"import React, {useState} from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { QUERY_RHYTHMS, QUERY_POST } from '../utils/queries';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { UPDATE_POST, ADD_POST } from '../utils/mutations';\nimport { useParams } from 'react-router-dom';\n\nimport Auth from '../utils/auth';\n\nconst Post = () => {\n\n\n\n    const { postId } = useParams();\n\n    const {loading: rhythmLoad, data: rhythmData} = useQuery(QUERY_RHYTHMS);\n    const {loading: postLoad, data: postData} = useQuery(QUERY_POST, {\n            variables: {postId: postId}\n        });\n\n    const [formState, setFormState] = useState({\n            content: \"\",\n            url: \"\",\n            title: \"\",\n            rhythm: \"\"\n          });\n\n\n        //   const [formState, setFormState] = useState({\n        //     ...postData\n        //   });\n\n    const [addPost, { error: addError, data: addData }] = useMutation(ADD_POST);\n    const [updatePost, { error: updateError, data: updateData }] = useMutation(UPDATE_POST);\n    \n    if (!Auth.loggedIn()) {\n        return <Redirect to=\"/login\" />;\n      }\n      \n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setFormState({\n            ...formState,\n            [name]: value,\n        });\n        };\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        console.log(formState);\n\n        try {\n            if(postData.post._id){\n                const userId = postData.post.user._id\n                console.log(userId)\n                 await updatePost({\n                    variables: { ...formState, user:postData.post.user._id, _id:postData.post._id  },\n                    });\n                    console.log(\"UpdatePost\")\n                    return <Redirect to=\"/profile/me\" />;\n            } else {\n                 await addPost({\n                    variables: { ...formState },\n                    });\n                    console.log(\"AddPost\")\n                    return <Redirect to=\"/\" />;\n            }\n\n            \n            \n        } catch (e) {\n            console.error(e);\n        }\n        };\n\n\nlet canEdit\nlet rhythmId = null\n   if (postLoad || rhythmLoad) {\n    return <div>Loading...</div>;\n  }\n\n  if (postData.post._id){\n        canEdit = true;\n        rhythmId = postData.post.rhythm._id\n   } else {\n        canEdit = false\n   }\n\n\nreturn (\n<div className=\"py-24\">\n    <div className=\"max-w-5xl mx-auto sm:px-6 lg:px-8 \">\n        <div className=\"bg-white border-2 overflow-hidden shadow-lg sm:rounded-lg\">\n            <div className=\"p-6 bg-white\">\n                <h1 className=\"np-title mb-8 text-3xl font-bold\">{canEdit ? \"EDIT POST\" : \"NEW POST\"}</h1>\n                <form id='newPost-form' onSubmit={handleFormSubmit}>\n                    <div className=\"mb-4\">\n                        <label className=\"text-xl text-gray-600\">Title<span className=\"text-red-500\">*</span></label>\n                        <input type=\"text\" onLoad={handleChange} onChange={handleChange} className=\"rounded-lg border-2 border-gray-300 p-2 w-full\" name=\"title\" id=\"title\" defaultValue={canEdit ? postData.post.title : \"\"} required />\n                    </div>\n                    <div>\n                        <label className=\"text-xl text-gray-600\">Rhythm</label>\n                        <select id='rhythm' name=\"rhythm\" onLoad={handleChange} onChange={handleChange} className=\"w-full py-4 border-gray-300 rounded-md shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" defaultValue={rhythmId} >\n                \n                                    {(rhythmData.rhythms.map((rhythm, index)=> {\n                                        return (<option key={index} value={rhythm._id}>{rhythm.name}</option>)\n                                    }))}\n                        </select>\n                    </div>\n                    <div className=\"mb-4\">\n                        <label className=\"text-xl text-gray-600\">Content<span className=\"text-red-500\">*</span></label>\n                        <div>\n                        \n                        <textarea defaultValue={postData ? postData.post.content : \"\"} onLoad={handleChange} onChange={handleChange}  id='content' name=\"content\" className=\"rounded-lg border-2 border-gray-500\">\n                                \n                        </textarea>\n                        </div>\n                    </div>\n                    <div className=\"mb-8\">\n                        <label className=\"text-xl text-gray-600\">URL</label>\n                        <input type=\"text\" onLoad={handleChange} onChange={handleChange} className=\"rounded-lg border-2 border-gray-300 p-2 w-full\" defaultValue={postData.post.url} name=\"url\" id=\"url\" placeholder=\"(Optional)\"/>\n                    </div>\n                    <div className=\"flex flex-row-reverse p-1\">\n                        <button type=\"submit\" className=\"w-3/12 rounded-lg p-3 bg-black text-white hover:bg-yellow-500\" required>Submit</button>\n                    </div>\n                </form>    \n            </div>\n        </div>\n    </div>\n</div>\n)}\n\nexport default Post;","C:\\Users\\Tina Ly\\Project-3\\client\\src\\components\\Navbar.js",[],"C:\\Users\\Tina Ly\\Project-3\\client\\src\\components\\RhythmFilter.js",["97"],"import React from 'react';\nimport { QUERY_RHYTHMS } from '../utils/queries';\nimport { useQuery } from '@apollo/client';\n\nconst RhythmFilter = () => {\n\n    const { loading, data } = useQuery(QUERY_RHYTHMS);\n\n\n  return (\n    <div className=\"hidden w-1/3 lg:block border-solid border-black flex justify-end mt-20 \">\n                  {loading ? (\n            <div>Loading...</div>\n          ) : (\n    <div className=\"p-8\">\n        <h1 className=\"ml-8 mb-6 text-2xl font-bold text-gray-500 \">Sponsored</h1>\n        <div className=\"flex flex-col max-w-sm px-4 py-6 mx-auto bg-white rounded-lg shadow-md\">\n           \n        </div>\n    </div>)}\n    </div>\n\n)};\n\nexport default RhythmFilter;","C:\\Users\\Tina Ly\\Project-3\\client\\src\\components\\Socialsignup.js",["98","99","100"],"C:\\Users\\Tina Ly\\Project-3\\client\\src\\components\\Feed.js",[],"C:\\Users\\Tina Ly\\Project-3\\client\\src\\components\\InstrumentList.js",[],"C:\\Users\\Tina Ly\\Project-3\\client\\src\\utils\\auth.js",[],"C:\\Users\\Tina Ly\\Project-3\\client\\src\\utils\\mutations.js",[],"C:\\Users\\Tina Ly\\Project-3\\client\\src\\utils\\queries.js",[],"C:\\Users\\Tina Ly\\Project-3\\client\\src\\components\\RhythmList.js",[],"C:\\Users\\Tina Ly\\Project-3\\client\\src\\components\\Comment.js",["101","102","103","104","105","106","107","108","109"],"import React, {useState} from 'react';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { UPDATE_COMMENT, ADD_COMMENT, DELETE_COMMENT } from '../utils/mutations';\n\n\nconst Comment = ({data, postId}) => {\n\n    const [addComment, { error: addError, data: addData }] = useMutation(ADD_COMMENT);\n    const [updateComment, { error: updateError, data: updateData }] = useMutation(UPDATE_COMMENT);\n    const [deleteComment, { error: deleteError, data: deleteData }] = useMutation(DELETE_COMMENT);\n\n    const [commentState, setCommentState] = useState([...data]);\n\n    const activeUser = Auth.getProfile().data._id\n    \n    const postComment = async (event) => {\n        let content\n        event.preventDefault();\n        if(event.code === \"Enter\" || event.code === \"NumpadEnter\"){\n           content = event.target.value       \n            if (content && activeUser){\n               const newComment = await addComment({variables: {\n                    content, activeUser, postId\n                }})\n                event.target.value = \"\"\n                setCommentState([...commentState, newComment.data.addComment ])\n            }\n        }\n        return true;\n    }\n    const editComment = async (event) => {\n        event.preventDefault();\n        const content = event.target.value;\n        const _id = event.target.dataValue;\n        // const commentInput = document.createElement(\"input\")\n        //     commentInput.type = \"submit\"\n        // <input type=\"submit\" onSubmit={postComment} name=\"editComment\" data-value=\"{{post.id}}\" id=\"comment\" placeholder=\"Add a comment!\" className=\"mt-4 w-full px-4 py-3 rounded-full bg-gray-200 mt-2 border focus:border-black focus:bg-white focus:outline-none \" autoComplete='true' required />\n\n        // event.target.parentNode.replaceChild(commentInput, event.target);\n\n        // if (content && activeUser){\n        //    return await updateComment({variable: {\n        //         content, activeUser, _id\n        //     }});\n        // }\n        return;\n    }    \n    \n    const removeComment = async (event) => {\n        event.preventDefault();\n        const _id = event.target.dataset.remove;;\n        if (activeUser){\n            await deleteComment({variables: {\n                _id,\n                postId\n            }});\n            const newState = commentState.filter(comment => comment._id !== _id )\n            setCommentState([...newState])   \n        }\n        return;\n    }\n\n    const commentToggleHandler = async (event) => {\n        // Stop the browser from submitting the form so we can do so with JavaScript\n            event.preventDefault();\n      \n            const commentBlock = event.target.nextElementSibling;\n            \n            const toggleBtn = event.target\n            \n            commentBlock.classList.toggle(\"hidden\");\n            if (commentBlock.classList.contains(\"hidden\")) {\n              toggleBtn.innerHTML = \"Show Comments\"\n            } else {\n              toggleBtn.innerHTML = \"Hide Comments\"\n            }\n        \n          };\n\n\nreturn (\n\n<div className=\"flex items-center justify-between mt-4\">\n    <button id=\"toggle-comments\" value=\"{{post.id}}\" onClick={commentToggleHandler} className=\"text-blue-500 hover:underline\">Show Comments</button>\n    <div className=\"hidden\" id=\"comments\">\n        <h1>Comments:</h1>\n        <>\n            {commentState ? commentState.map((comment) => {\n                return (\n                <>\n                    <div  className=\"float-left max-w-4xl px-10 py-4 mx-auto mb-2 bg-gray-200 rounded-lg shadow-md\">\n                        \n                        {comment.user._id === activeUser ? (<button onClick={removeComment} data-remove={comment._id} className=\"w-1/6 h-1/6\"><img alt=\"delComment\" data-remove={comment._id} src=\"trash-bin.png\" title=\"delComment\"className=\"w-7 h-7\"></img></button>): \"\"}\n                        {comment.user._id === activeUser ? (<button onClick={editComment} data-edit={comment._id} className=\"w-1/6 h-1/6\"><img alt=\"editComment\" data-edit={comment._id} src=\"edit.png\" title=\"editComment\"className=\"w-7 h-7\"></img></button>): \"\"}\n\n                        <h3 className=\"italic text-grey-200 text-sm\">{comment.user.userName} on {comment.dateCreated}</h3>\n                        <p className=\" float-left font-semibold\">{comment.content}</p>\n                    </div>\n\n                </>    )\n            }) :\"\"}\n            <div className=\"mb-4 rounded-full\">\n                <input type=\"text\" onKeyUpCapture={postComment}  name=\"comment\" id=\"comment\" placeholder=\"Add a comment!\" className=\"mt-4 w-full px-4 py-3 rounded-full bg-gray-200 mt-2 border focus:border-black focus:bg-white focus:outline-none \" />\n            </div>\n        </>\n    </div>\n</div>)}\n\nexport default Comment;\n\n","C:\\Users\\Tina Ly\\Project-3\\client\\src\\pages\\profileEdit.js",["110","111","112","113","114","115"],"C:\\Users\\Tina Ly\\Project-3\\client\\src\\pages\\ProfileEdit.js",["116","117","118"],"import React, {useState} from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { UPDATE_USER } from '../utils/mutations';\nimport { QUERY_USER } from '../utils/queries';\nimport InstrumentList from '../components/InstrumentList'\n\nimport Auth from '../utils/auth';\n\nconst ProfileEdit = () => {\n\nconst userName = Auth.getProfile().data.userName\n\nconst { loading, data} = useQuery(QUERY_USER, {variables: { userName } });\nconst [updateUser, { error, data: updateData }] = useMutation(UPDATE_USER);\nconst [formState, setFormState] = useState({\n        userName: \"\",\n        instruments: [],\n        img: \"\",\n        bio: \"\"\n      });\nif (!Auth.loggedIn()){\n    return <Redirect to=\"/login\" />;\n}\n\nif (!Auth.loggedIn()) {\n    return <Redirect to=\"/login\" />;\n  }\n  \n\nconst handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n        ...formState,\n        [name]: value,\n    });\n};\n\nconst handlePhoto = () => {\n    return console.log(\"PHOTO\")\n}\n\nconst handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n        await updateUser({\n            variables: { ...formState},\n            });\n            return <Redirect to=\"/profile/me\" />;\n    } catch (e) {\n        console.error(e);\n    }\n    };\n\n\nif (loading) {\nreturn <div>Loading...</div>;\n}\n\nreturn (\n    <div className=\"py-24\">\n    <div className=\"max-w-5xl mx-auto sm:px-6 lg:px-8 h-full\">\n        <div className=\"bg-white overflow-hidden shadow-lg sm:rounded-lg\">\n            <div className=\"p-6 bg-white border-2 border-gray-200\">\n                <h1 className=\"np-title mb-8 text-3xl font-bold\">Edit Profile</h1>\n                <form id='newPost-form' onSubmit={handleFormSubmit}>\n                    <div className=\"mb-4\">\n                        <label className=\"text-xl text-gray-600\">Profile Photo</label>\n                        <input className=\"rounded-lg border-2 border-gray-300 p-2 w-full\"\n                            type=\"file\" \n                            accept=\".png, .jpg, .jpeg\"\n                            name=\"photo\"\n                            onChange={handlePhoto}\n                        />                    \n                    </div>\n                    <div>\n                        <label className=\"text-xl text-gray-600\">First Name</label>\n                        <input className=\"bg-gray-200 mb-4 rounded-lg border-2 border-gray-300 p-2 w-full\"\n                            type=\"text\"\n                            placeholder=\"First Name\"\n                            name=\"firstName\"\n                            value={data.user.firstName}\n                            onChange={handleChange}\n                        />\n                    </div>\n                    <div>\n                        <label className=\"text-xl text-gray-600\">Last Name</label>\n                        <input className=\"bg-gray-200 mb-4 rounded-lg border-2 border-gray-300 p-2 w-full\"\n                            type=\"text\"\n                            placeholder=\"Last Name\"\n                            name=\"lastName\"\n                            value={data.user.lastName}\n                            onChange={handleChange}\n                        />\n                    </div>\n                    <div>\n                        <label className=\"text-xl text-gray-600\">User Name</label>\n                        <input className=\"bg-gray-200 mb-4 rounded-lg border-2 border-gray-300 p-2 w-full\"\n                            type=\"text\"\n                            placeholder=\"User Name\"\n                            name=\"userName\"\n                            value={data.user.userName}\n                            onChange={handleChange}\n                        />\n                    </div>\n                    <div>\n                        <label className=\"text-xl text-gray-600\">Email</label>\n                        <input className=\"bg-gray-200 mb-4 rounded-lg border-2 border-gray-300 p-2 w-full\"\n                            type=\"email\"\n                            placeholder=\"Email\"\n                            name=\"email\"\n                            value={data.user.email}\n                            onChange={handleChange}\n                        />\n                    </div>\n                    <div className=\"mb-4\">\n                        <label className=\"text-xl text-gray-600\">Instruments</label>\n                        <InstrumentList className=\"rounded-lg border-2 border-gray-300 p-2 w-full\"  preSel={data.user.instruments}/>\n                    </div>\n                    <div>\n                        <label className=\"text-xl text-gray-600\">About Me</label>\n                        <textarea className=\"mb-24 rounded-lg border-2 border-gray-300 p-2 w-full h-48\"\n                            type=\"text\"\n                            placeholder=\"About Me\"\n                            name=\"bio\"\n                            value={data.user.bio}\n                            onChange={handleChange}\n                        />\n                    </div>\n                    <div className=\"flex flex-row-reverse p-1\">\n                        <button type=\"submit\" className=\"w-3/12 rounded-lg p-3 bg-black text-white hover:bg-yellow-500\" required>Submit</button>\n                    </div>\n                </form>    \n            </div>\n        </div>\n    </div>\n</div>\n)}\n\nexport default ProfileEdit;",{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":2,"column":10,"nodeType":"125","messageId":"126","endLine":2,"endColumn":18},{"ruleId":"123","severity":1,"message":"127","line":5,"column":22,"nodeType":"125","messageId":"126","endLine":5,"endColumn":30},{"ruleId":"123","severity":1,"message":"128","line":6,"column":8,"nodeType":"125","messageId":"126","endLine":6,"endColumn":22},{"ruleId":"123","severity":1,"message":"129","line":2,"column":20,"nodeType":"125","messageId":"126","endLine":2,"endColumn":29},{"ruleId":"123","severity":1,"message":"130","line":3,"column":10,"nodeType":"125","messageId":"126","endLine":3,"endColumn":18},{"ruleId":"123","severity":1,"message":"131","line":2,"column":20,"nodeType":"125","messageId":"126","endLine":2,"endColumn":24},{"ruleId":"123","severity":1,"message":"132","line":33,"column":30,"nodeType":"125","messageId":"126","endLine":33,"endColumn":38},{"ruleId":"123","severity":1,"message":"133","line":33,"column":46,"nodeType":"125","messageId":"126","endLine":33,"endColumn":53},{"ruleId":"123","severity":1,"message":"134","line":34,"column":33,"nodeType":"125","messageId":"126","endLine":34,"endColumn":44},{"ruleId":"123","severity":1,"message":"135","line":34,"column":52,"nodeType":"125","messageId":"126","endLine":34,"endColumn":62},{"ruleId":"123","severity":1,"message":"136","line":7,"column":22,"nodeType":"125","messageId":"126","endLine":7,"endColumn":26},{"ruleId":"137","severity":1,"message":"138","line":11,"column":4,"nodeType":"139","endLine":11,"endColumn":48},{"ruleId":"137","severity":1,"message":"138","line":12,"column":4,"nodeType":"139","endLine":12,"endColumn":47},{"ruleId":"137","severity":1,"message":"138","line":13,"column":4,"nodeType":"139","endLine":13,"endColumn":46},{"ruleId":"123","severity":1,"message":"132","line":9,"column":33,"nodeType":"125","messageId":"126","endLine":9,"endColumn":41},{"ruleId":"123","severity":1,"message":"133","line":9,"column":49,"nodeType":"125","messageId":"126","endLine":9,"endColumn":56},{"ruleId":"123","severity":1,"message":"140","line":10,"column":12,"nodeType":"125","messageId":"126","endLine":10,"endColumn":25},{"ruleId":"123","severity":1,"message":"134","line":10,"column":36,"nodeType":"125","messageId":"126","endLine":10,"endColumn":47},{"ruleId":"123","severity":1,"message":"135","line":10,"column":55,"nodeType":"125","messageId":"126","endLine":10,"endColumn":65},{"ruleId":"123","severity":1,"message":"141","line":11,"column":36,"nodeType":"125","messageId":"126","endLine":11,"endColumn":47},{"ruleId":"123","severity":1,"message":"142","line":11,"column":55,"nodeType":"125","messageId":"126","endLine":11,"endColumn":65},{"ruleId":"123","severity":1,"message":"143","line":34,"column":15,"nodeType":"125","messageId":"126","endLine":34,"endColumn":22},{"ruleId":"123","severity":1,"message":"144","line":35,"column":15,"nodeType":"125","messageId":"126","endLine":35,"endColumn":18},{"ruleId":"123","severity":1,"message":"131","line":2,"column":20,"nodeType":"125","messageId":"126","endLine":2,"endColumn":24},{"ruleId":"145","severity":2,"message":"146","line":14,"column":26,"nodeType":"125","endLine":14,"endColumn":34},{"ruleId":"123","severity":1,"message":"147","line":15,"column":22,"nodeType":"125","messageId":"126","endLine":15,"endColumn":27},{"ruleId":"123","severity":1,"message":"135","line":15,"column":35,"nodeType":"125","messageId":"126","endLine":15,"endColumn":45},{"ruleId":"145","severity":2,"message":"148","line":15,"column":51,"nodeType":"125","endLine":15,"endColumn":62},{"ruleId":"145","severity":2,"message":"149","line":16,"column":35,"nodeType":"125","endLine":16,"endColumn":43},{"ruleId":"123","severity":1,"message":"131","line":2,"column":20,"nodeType":"125","messageId":"126","endLine":2,"endColumn":24},{"ruleId":"123","severity":1,"message":"147","line":15,"column":22,"nodeType":"125","messageId":"126","endLine":15,"endColumn":27},{"ruleId":"123","severity":1,"message":"135","line":15,"column":35,"nodeType":"125","messageId":"126","endLine":15,"endColumn":45},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'QUERY_ME' is defined but never used.","'InstrumentList' is defined but never used.","'useParams' is defined but never used.","'useQuery' is defined but never used.","'Link' is defined but never used.","'addError' is assigned a value but never used.","'addData' is assigned a value but never used.","'updateError' is assigned a value but never used.","'updateData' is assigned a value but never used.","'data' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'updateComment' is assigned a value but never used.","'deleteError' is assigned a value but never used.","'deleteData' is assigned a value but never used.","'content' is assigned a value but never used.","'_id' is assigned a value but never used.","react-hooks/rules-of-hooks","React Hook \"useQuery\" is called in function \"profileEdit\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","'error' is assigned a value but never used.","React Hook \"useMutation\" is called in function \"profileEdit\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook \"useState\" is called in function \"profileEdit\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","no-global-assign","no-unsafe-negation"]
