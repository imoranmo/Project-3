[{"C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\index.js":"1","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\App.js":"2","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\pages\\Login.js":"3","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\pages\\Profile.js":"4","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\pages\\Home.js":"5","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\components\\Post.js":"6","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\pages\\Signup.js":"7","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\components\\Navbar.js":"8","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\components\\Feed.js":"9","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\utils\\mutations.js":"10","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\utils\\auth.js":"11","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\utils\\queries.js":"12","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\components\\InstrumentList.js":"13","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\components\\RhythmFilter.js":"14","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\components\\Socialsignup.js":"15","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\components\\Comment.js":"16","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\components\\RhythmList.js":"17","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\pages\\ProfileEdit.js":"18"},{"size":233,"mtime":1636606783002,"results":"19","hashOfConfig":"20"},{"size":2109,"mtime":1637293837174,"results":"21","hashOfConfig":"20"},{"size":3723,"mtime":1636691175616,"results":"22","hashOfConfig":"20"},{"size":2950,"mtime":1637293837187,"results":"23","hashOfConfig":"20"},{"size":1095,"mtime":1637293837186,"results":"24","hashOfConfig":"20"},{"size":5322,"mtime":1637299154077,"results":"25","hashOfConfig":"20"},{"size":5298,"mtime":1637293837190,"results":"26","hashOfConfig":"20"},{"size":1815,"mtime":1637299477459,"results":"27","hashOfConfig":"20"},{"size":3679,"mtime":1637298749380,"results":"28","hashOfConfig":"20"},{"size":2204,"mtime":1637298110469,"results":"29","hashOfConfig":"20"},{"size":1084,"mtime":1637211360779,"results":"30","hashOfConfig":"20"},{"size":1378,"mtime":1637297525426,"results":"31","hashOfConfig":"20"},{"size":863,"mtime":1637295457579,"results":"32","hashOfConfig":"20"},{"size":709,"mtime":1637293837180,"results":"33","hashOfConfig":"20"},{"size":613,"mtime":1637293837184,"results":"34","hashOfConfig":"20"},{"size":4908,"mtime":1637211360777,"results":"35","hashOfConfig":"20"},{"size":778,"mtime":1637295597491,"results":"36","hashOfConfig":"20"},{"size":5570,"mtime":1637300614345,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1719h79",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"40"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\index.js",[],["84","85"],"C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\App.js",[],"C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\pages\\Login.js",[],"C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\pages\\Profile.js",["86","87","88"],"import React from 'react';\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\n\r\nimport { QUERY_USER, QUERY_ME } from '../utils/queries';\r\nimport InstrumentList from '../components/InstrumentList';\r\nimport Feed from '../components/Feed';\r\n\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst Profile = () => {\r\n  const { userName } = useParams();\r\n\r\n  const { loading, data } = useQuery(QUERY_USER, {\r\n    variables: { userName },\r\n  });\r\n\r\n  // Enable Editting if userParam matches username\r\n  let canEdit = false\r\n  if (Auth.loggedIn() && Auth.getProfile().data.userName === userName) {\r\n    console.log(\"You can edit this profile now\")\r\n    canEdit = true;\r\n  }\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (!Auth.loggedIn()) {\r\n    return (\r\n      <h4>\r\n        You need to be logged in to see this. Use the navigation links above to\r\n        sign up or log in!\r\n      </h4>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex justify-center w-screen\">\r\n\r\n    <div className=\"bg-white p-6 mt-24 border-2 border-grey-500 rounded-lg shadow-xl w-1/4 h-3/4\">\r\n     <h1 className=\"text-2xl  text-gray-700 font-bold\">{userName}'s Profile</h1>    \r\n     <div className=\"image overflow-hidden\">{canEdit && (<a href=\"/profileEdit\" title=\"Click to change profile picture\">Edit Profile</a>)}<img className=\"h-auto w-full mx-auto rounded-full\" src={data.user.img} alt=\"profilepic\"/>\r\n     </div>\r\n     <h1 className=\"text-gray-900 font-bold text-xl leading-8 my-1\">{`${data.user.firstName} ${data.user.lastName}`}</h1>\r\n     <h3 className=\"text-blue-600 font-lg text-semibold leading-6 mb-2\">Username: <span className=\"text-black\">{data.user.userName}</span></h3>\r\n     <p className=\"text-lg text-grey-500 leading-6 font-semibold\">About me: </p><span className=\"font-small text-base\">{data.user.bio}</span>\r\n     <div class=\"items-center space-x-3 font-bold text-2xl leading-8 mt-4\">\r\n     <h1>Instruments</h1>\r\n   </div>\r\n\r\n   <div class=\"flex items-center space-x-3 font-semibold text-gray-900 text-2xl leading-8 mb-4 underline\">\r\n     </div>\r\n     {/* {data.user.instrument} */}\r\n     {data.user.instruments.map((instrument) => {\r\n           return (<div class=\"grid grid-cols-3 gap-1 mb-2\">\r\n               <div class=\"rounded-lg bg-yellow-500 text-center\">{instrument.name}</div>\r\n           </div>)\r\n     })}\r\n \r\n       </div>\r\n       <div className=\"ml-20 w-2/4 mb-10 mt-24\">\r\n           <div className=\"p-3\">\r\n               <div className=\"flex items-center space-x-2 text-gray-900 leading-8\">\r\n                   <span className=\"tracking-wide text-xl font-semibold ml-10\">Previous Posts</span>\r\n               </div>\r\n               <div className=\"text-gray-700 \">\r\n           \r\n           <Feed user={data.user._id}/>          \r\n           \r\n           </div>\r\n       </div>\r\n   </div>\r\n </div>\r\n\r\n\r\n\r\n\r\n\r\n           \r\n   \r\n\r\n \r\n     \r\n\r\n\r\n);\r\n};\r\n\r\n\r\nexport default Profile;\r\n","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\pages\\Home.js",["89","90"],"import React from 'react';\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\nimport RhythmFilter from '../components/RhythmFilter';\r\nimport Feed from '../components/Feed';\r\n\r\n\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst Home = () => {\r\n    const loading = false\r\n      if (!Auth.loggedIn()) {\r\n        return <Redirect to=\"/login\" />;\r\n      }\r\n\r\n  return (\r\n    <main className=\"w-screen\">\r\n          {loading ? (\r\n            <div>Loading...</div>\r\n          ) : (\r\n<>\r\n<div className=\"flex justify-center w-screen\">\r\n  <div className=\"w-full xl:w-1/2 w-screen mt-20 mb-6 ml-6 mr-10\">\r\n  <div className=\"p-8 flex items-center justify-between \">\r\n        <h1 className=\"mb-4 text-3xl font-extrabold text-gray-700\">Posts</h1>\r\n        <a href=\"/Post/new\" className=\"rounded-lg border-2 bg-black border-black mr-6 text-white hover:bg-blue-600 hover:border-blue-600 p-2 font-medium\">CREATE NEW POST</a>   \r\n    </div>\r\n    <Feed />\r\n  </div>\r\n  <RhythmFilter />\r\n</div>\r\n        \r\n</>\r\n          )}\r\n</main>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\components\\Post.js",["91","92","93","94","95"],"import React, {useState} from 'react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport { QUERY_RHYTHMS, QUERY_POST } from '../utils/queries';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { UPDATE_POST, ADD_POST } from '../utils/mutations';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst Post = () => {\r\n\r\n\r\n\r\n    const { postId } = useParams();\r\n\r\n    const {loading: rhythmLoad, data: rhythmData} = useQuery(QUERY_RHYTHMS);\r\n    const {loading: postLoad, data: postData} = useQuery(QUERY_POST, {\r\n            variables: {postId: postId}\r\n        });\r\n\r\n    const [formState, setFormState] = useState({\r\n            content: \"\",\r\n            url: \"\",\r\n            title: \"\",\r\n            rhythm: \"\"\r\n          });\r\n\r\n\r\n        //   const [formState, setFormState] = useState({\r\n        //     ...postData\r\n        //   });\r\n\r\n    const [addPost, { error: addError, data: addData }] = useMutation(ADD_POST);\r\n    const [updatePost, { error: updateError, data: updateData }] = useMutation(UPDATE_POST);\r\n    \r\n    if (!Auth.loggedIn()) {\r\n        return <Redirect to=\"/login\" />;\r\n      }\r\n      \r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setFormState({\r\n            ...formState,\r\n            [name]: value,\r\n        });\r\n        };\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n        console.log(formState);\r\n\r\n        try {\r\n            if(postData.post._id){\r\n                const userId = postData.post.user._id\r\n                console.log(userId)\r\n                 await updatePost({\r\n                    variables: { ...formState, user:postData.post.user._id, _id:postData.post._id  },\r\n                    });\r\n                    console.log(\"UpdatePost\")\r\n                    return window.location= \"/profile/me\";\r\n            } else {\r\n                 await addPost({\r\n                    variables: { ...formState },\r\n                    });\r\n                    console.log(\"AddPost\")\r\n                    return window.location = \"/\"\r\n            }\r\n\r\n            \r\n            \r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n        };\r\n\r\n\r\nlet canEdit\r\nlet rhythmId = null\r\n   if (postLoad || rhythmLoad) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (postData.post._id){\r\n        canEdit = true;\r\n        rhythmId = postData.post.rhythm._id\r\n   } else {\r\n        canEdit = false\r\n   }\r\n\r\n\r\nreturn (\r\n<div className=\"py-24\">\r\n    <div className=\"max-w-5xl mx-auto sm:px-6 lg:px-8 \">\r\n        <div className=\"bg-white border-2 overflow-hidden shadow-lg sm:rounded-lg\">\r\n            <div className=\"p-6 bg-white\">\r\n                <h1 className=\"np-title mb-8 text-3xl font-bold\">{canEdit ? \"EDIT POST\" : \"NEW POST\"}</h1>\r\n                <form id='newPost-form' onSubmit={handleFormSubmit}>\r\n                    <div className=\"mb-4\">\r\n                        <label className=\"text-xl text-gray-600\">Title<span className=\"text-red-500\">*</span></label>\r\n                        <input type=\"text\" onLoad={handleChange} onChange={handleChange} className=\"rounded-lg border-2 border-gray-300 p-2 w-full\" name=\"title\" id=\"title\" defaultValue={canEdit ? postData.post.title : \"\"} required />\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"text-xl text-gray-600\">Rhythm</label>\r\n                        <select id='rhythm' name=\"rhythm\" onLoad={handleChange} onChange={handleChange} className=\"w-full py-4 border-gray-300 rounded-md shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" defaultValue={rhythmId} >\r\n                \r\n                                    {(rhythmData.rhythms.map((rhythm, index)=> {\r\n                                        return (<option key={index} value={rhythm._id}>{rhythm.name}</option>)\r\n                                    }))}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"mb-4\">\r\n                        <label className=\"text-xl text-gray-600\">Content<span className=\"text-red-500\">*</span></label>\r\n                        <div>\r\n                        \r\n                        <textarea defaultValue={postData ? postData.post.content : \"\"} onLoad={handleChange} onChange={handleChange}  id='content' name=\"content\" className=\"rounded-lg border-2 border-gray-500\">\r\n                                \r\n                        </textarea>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mb-8\">\r\n                        <label className=\"text-xl text-gray-600\">URL</label>\r\n                        <input type=\"text\" onLoad={handleChange} onChange={handleChange} className=\"rounded-lg border-2 border-gray-300 p-2 w-full\" defaultValue={postData.post.url} name=\"url\" id=\"url\" placeholder=\"(Optional)\"/>\r\n                    </div>\r\n                    <div className=\"flex flex-row-reverse p-1\">\r\n                        <button type=\"submit\" className=\"w-3/12 rounded-lg p-3 bg-black text-white hover:bg-yellow-500\" required>Submit</button>\r\n                    </div>\r\n                </form>    \r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n)}\r\n\r\nexport default Post;","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\pages\\Signup.js",[],"C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\components\\Navbar.js",[],"C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\components\\Feed.js",["96"],"import React, {useEffect, useState} from 'react';\r\nimport { QUERY_POSTS } from '../utils/queries';\r\nimport { useQuery } from '@apollo/client';\r\nimport InstrumentList from './InstrumentList'\r\nimport RhythmList from './RhythmList'\r\nimport Comment from \"./Comment\"\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst Feed = (props) => {\r\n\r\n    const {user} = props\r\n \r\n    const [rhythms, setRhythms] = useState(window.localStorage.getItem('rhythmFilters') || [])\r\n    const [instruments, setInstruments] = useState(JSON.parse(window.localStorage.getItem('instrumentFilters')) || [])\r\n    const [posts, setPosts] = useState([])\r\n    const [filteredPosts, setfilteredPosts] = useState([])\r\n\r\n    const instrumentFilterHandle = (event) => {\r\n        setInstruments(event)\r\n    }\r\n    const rhythmFilterHandle = (event) => {\r\n        setRhythms(event)\r\n    }\r\n\r\n    const { loading, data } = useQuery(QUERY_POSTS, {variables: {user}});\r\n\r\n    useEffect(()=> {\r\n       setPosts(data?.posts)\r\n       setfilteredPosts(data?.posts)\r\n    },[data])\r\n\r\n\r\n    useEffect(()=>{\r\n        console.log(instruments)\r\n        console.log(rhythms)\r\n\r\n        const newPosts = posts.filter((post) => {\r\n            let inst = false\r\n            for ( let i=0; i < rhythms.length; i++){\r\n                console.log(rhythms[i].value)\r\n                if (rhythms[i].value === post.rhythm._id){\r\n                    inst =  true;\r\n                }\r\n            }\r\n            let rhyth = false\r\n            for ( let j=0; j < instruments.length; j++){\r\n                for (let k=0; k < post.user.instruments.length; k++){\r\n                \r\n                if (instruments[j].value === post.user.instruments[k]._id){\r\n                    rhyth = true;\r\n                }\r\n            }\r\n        }\r\n            return inst && rhyth\r\n        })\r\n\r\n        console.log(newPosts)\r\n        setfilteredPosts(newPosts)\r\n\r\n\r\n    },[instruments, rhythms])\r\n\r\n    const showAllPosts = () => {\r\n        setfilteredPosts(posts)\r\n    }\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>\r\n    }\r\n\r\n\r\n    return (\r\n\r\n<div className=\"max-w-4xl px-10 mx-auto mb-4\"> \r\n        <>\r\n            <div className=\"flex space-x-2 my-4\">\r\n               \r\n                <RhythmList filterList={rhythms} filterHandle={rhythmFilterHandle}/>\r\n                <InstrumentList filterList={instruments} filterHandle={instrumentFilterHandle}/>\r\n                <button onClick={showAllPosts}>Show All</button>\r\n            </div>\r\n            {filteredPosts.map((post) => {\r\n        \r\n                return (<><div  className=\"max-w-4xl px-10 py-6 mx-auto bg-white rounded-lg shadow-md mb-4\">\r\n\r\n                            <div className=\"flex items-center justify-between\"><span className=\"font-light text-gray-600\">{post.dateCreated} by: {post.user.userName} </span>\r\n                            {post.user._id === Auth.getProfile().data._id ? (<a href={`/Post/${post._id}`} className=\"text-sm text-blue-500 underline\">edit</a>) : \"\"}\r\n                            </div>\r\n                            <div className=\"mt-2\"><a href=\"/\" className=\"text-2xl font-bold text-gray-700 hover:underline\">{post.title}</a>\r\n                                <div className=\"text-blue-700\">#{post.rhythm.name}</div>\r\n                                <div>{post.content}</div>\r\n                                <div><a className=\"text-blue-700 underline\" target=\"_blank\" href=\"{{{post.url}}}\">{post.url}</a></div>\r\n                            </div>\r\n                            <Comment data={post.comments} postId={post._id}/>\r\n                        </div></>)\r\n            })}\r\n        </>\r\n    \r\n     \r\n</div>\r\n)};\r\nexport default Feed;","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\utils\\mutations.js",[],"C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\utils\\auth.js",[],"C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\utils\\queries.js",[],"C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\components\\InstrumentList.js",["97"],"import React, {useState} from 'react';\r\nimport { QUERY_INSTRUMENTS } from '../utils/queries';\r\nimport { useQuery } from '@apollo/client';\r\nimport { MultiSelect } from \"react-multi-select-component\";\r\n\r\nconst InstrumentList = ({filterList, filterHandle}) => {\r\n\r\n    // const [selected, setSelected] = useState();\r\n    const { loading, data } = useQuery(QUERY_INSTRUMENTS);\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n      }\r\n\r\n      const allInstruments = data.instruments.map((instrument) =>{ return {\r\n        value: instrument._id,\r\n        label: instrument.name\r\n    }})\r\n\r\n  return ( \r\n<div className=\"w-1/3\">\r\n<MultiSelect \r\n        options={allInstruments}\r\n        name=\"instruments\"\r\n        value={filterList}\r\n        onChange={filterHandle}\r\n        labelledBy=\"Instruments\"\r\n/>\r\n</div>\r\n\r\n)\r\n  };\r\n  export default InstrumentList;","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\components\\RhythmFilter.js",["98"],"import React from 'react';\r\nimport { QUERY_RHYTHMS } from '../utils/queries';\r\nimport { useQuery } from '@apollo/client';\r\n\r\nconst RhythmFilter = () => {\r\n\r\n    const { loading, data } = useQuery(QUERY_RHYTHMS);\r\n\r\n\r\n  return (\r\n    <div className=\"hidden w-1/3 lg:block border-solid border-black flex justify-end mt-20 \">\r\n                  {loading ? (\r\n            <div>Loading...</div>\r\n          ) : (\r\n    <div className=\"p-8\">\r\n        <h1 className=\"ml-8 mb-6 text-2xl font-bold text-gray-500 \">Sponsored</h1>\r\n        <div className=\"flex flex-col max-w-sm px-4 py-6 mx-auto bg-white rounded-lg shadow-md\">\r\n           \r\n        </div>\r\n    </div>)}\r\n    </div>\r\n\r\n)};\r\n\r\nexport default RhythmFilter;","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\components\\Socialsignup.js",["99","100","101"],"import React from 'react';\r\nimport \"./socialsignup.css\"\r\n// import { useQuery } from '@apollo/client';\r\n\r\nfunction Socialsignup(){\r\nreturn(\r\n    <div>\r\n <div class=\"login-box-social-section rounded-lg\">\r\n <div class=\"login-box-social-section-inner\">\r\n   <span class=\"login-box-social-headline\">Sign in with<br />your social network</span>\r\n   <a class=\"login-box-social-button-facebook\">Log in with Facebook</a>\r\n   <a class=\"login-box-social-button-twitter\">Log in with Twitter</a>\r\n   <a class=\"login-box-social-button-google\">Log in with Google+</a>\r\n </div>\r\n</div>\r\n</div>\r\n)\r\n}\r\nexport default Socialsignup;","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\components\\Comment.js",["102","103","104","105","106","107","108","109","110"],"import React, {useState} from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport Auth from '../utils/auth';\r\nimport { UPDATE_COMMENT, ADD_COMMENT, DELETE_COMMENT } from '../utils/mutations';\r\n\r\n\r\nconst Comment = ({data, postId}) => {\r\n\r\n    const [addComment, { error: addError, data: addData }] = useMutation(ADD_COMMENT);\r\n    const [updateComment, { error: updateError, data: updateData }] = useMutation(UPDATE_COMMENT);\r\n    const [deleteComment, { error: deleteError, data: deleteData }] = useMutation(DELETE_COMMENT);\r\n\r\n    const [commentState, setCommentState] = useState([...data]);\r\n\r\n    const activeUser = Auth.getProfile().data._id\r\n    \r\n    const postComment = async (event) => {\r\n        let content\r\n        event.preventDefault();\r\n        if(event.code === \"Enter\" || event.code === \"NumpadEnter\"){\r\n           content = event.target.value       \r\n            if (content && activeUser){\r\n               const newComment = await addComment({variables: {\r\n                    content, activeUser, postId\r\n                }})\r\n                event.target.value = \"\"\r\n                setCommentState([...commentState, newComment.data.addComment ])\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    const editComment = async (event) => {\r\n        event.preventDefault();\r\n        const content = event.target.value;\r\n        const _id = event.target.dataValue;\r\n        // const commentInput = document.createElement(\"input\")\r\n        //     commentInput.type = \"submit\"\r\n        // <input type=\"submit\" onSubmit={postComment} name=\"editComment\" data-value=\"{{post.id}}\" id=\"comment\" placeholder=\"Add a comment!\" className=\"mt-4 w-full px-4 py-3 rounded-full bg-gray-200 mt-2 border focus:border-black focus:bg-white focus:outline-none \" autoComplete='true' required />\r\n\r\n        // event.target.parentNode.replaceChild(commentInput, event.target);\r\n\r\n        // if (content && activeUser){\r\n        //    return await updateComment({variable: {\r\n        //         content, activeUser, _id\r\n        //     }});\r\n        // }\r\n        return;\r\n    }    \r\n    \r\n    const removeComment = async (event) => {\r\n        event.preventDefault();\r\n        const _id = event.target.dataset.remove;;\r\n        if (activeUser){\r\n            await deleteComment({variables: {\r\n                _id,\r\n                postId\r\n            }});\r\n            const newState = commentState.filter(comment => comment._id !== _id )\r\n            setCommentState([...newState])   \r\n        }\r\n        return;\r\n    }\r\n\r\n    const commentToggleHandler = async (event) => {\r\n        // Stop the browser from submitting the form so we can do so with JavaScript\r\n            event.preventDefault();\r\n      \r\n            const commentBlock = event.target.nextElementSibling;\r\n            \r\n            const toggleBtn = event.target\r\n            \r\n            commentBlock.classList.toggle(\"hidden\");\r\n            if (commentBlock.classList.contains(\"hidden\")) {\r\n              toggleBtn.innerHTML = \"Show Comments\"\r\n            } else {\r\n              toggleBtn.innerHTML = \"Hide Comments\"\r\n            }\r\n        \r\n          };\r\n\r\n\r\nreturn (\r\n\r\n<div className=\"flex items-center justify-between mt-4\">\r\n    <button id=\"toggle-comments\" value=\"{{post.id}}\" onClick={commentToggleHandler} className=\"text-blue-500 hover:underline\">Show Comments</button>\r\n    <div className=\"hidden\" id=\"comments\">\r\n        <h1>Comments:</h1>\r\n        <>\r\n            {commentState ? commentState.map((comment) => {\r\n                return (\r\n                <>\r\n                    <div  className=\"float-left max-w-4xl px-10 py-4 mx-auto mb-2 bg-gray-200 rounded-lg shadow-md\">\r\n                        \r\n                        {comment.user._id === activeUser ? (<button onClick={removeComment} data-remove={comment._id} className=\"w-1/6 h-1/6\"><img alt=\"delComment\" data-remove={comment._id} src=\"trash-bin.png\" title=\"delComment\"className=\"w-7 h-7\"></img></button>): \"\"}\r\n                        {comment.user._id === activeUser ? (<button onClick={editComment} data-edit={comment._id} className=\"w-1/6 h-1/6\"><img alt=\"editComment\" data-edit={comment._id} src=\"edit.png\" title=\"editComment\"className=\"w-7 h-7\"></img></button>): \"\"}\r\n\r\n                        <h3 className=\"italic text-grey-200 text-sm\">{comment.user.userName} on {comment.dateCreated}</h3>\r\n                        <p className=\" float-left font-semibold\">{comment.content}</p>\r\n                    </div>\r\n\r\n                </>    )\r\n            }) :\"\"}\r\n            <div className=\"mb-4 rounded-full\">\r\n                <input type=\"text\" onKeyUpCapture={postComment}  name=\"comment\" id=\"comment\" placeholder=\"Add a comment!\" className=\"mt-4 w-full px-4 py-3 rounded-full bg-gray-200 mt-2 border focus:border-black focus:bg-white focus:outline-none \" />\r\n            </div>\r\n        </>\r\n    </div>\r\n</div>)}\r\n\r\nexport default Comment;\r\n\r\n","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\components\\RhythmList.js",["111","112"],"import React, {useState, useEffect} from 'react';\r\nimport { QUERY_RHYTHMS } from '../utils/queries';\r\nimport { useQuery } from '@apollo/client';\r\nimport { MultiSelect } from \"react-multi-select-component\";\r\n\r\nconst RhythmList = ({filterList, filterHandle}) => {\r\n\r\n\r\n    const { loading, data } = useQuery(QUERY_RHYTHMS);\r\n\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n      }\r\n\r\n      const allRhythms = data.rhythms.map((rhythm) =>{ return {\r\n        value: rhythm._id,\r\n        label: rhythm.name\r\n    }})\r\n\r\n  return ( \r\n<div className=\"w-1/3\">\r\n<MultiSelect \r\n        options={allRhythms}\r\n        name=\"rhythms\"\r\n        value={filterList}\r\n        onChange={filterHandle}\r\n        labelledBy=\"Rhythms\"\r\n/>\r\n</div>\r\n\r\n)\r\n  };\r\n  export default RhythmList;","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\pages\\ProfileEdit.js",["113","114","115","116","117"],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":2,"column":10,"nodeType":"124","messageId":"125","endLine":2,"endColumn":18},{"ruleId":"122","severity":1,"message":"126","line":5,"column":22,"nodeType":"124","messageId":"125","endLine":5,"endColumn":30},{"ruleId":"122","severity":1,"message":"127","line":6,"column":8,"nodeType":"124","messageId":"125","endLine":6,"endColumn":22},{"ruleId":"122","severity":1,"message":"128","line":2,"column":20,"nodeType":"124","messageId":"125","endLine":2,"endColumn":29},{"ruleId":"122","severity":1,"message":"129","line":3,"column":10,"nodeType":"124","messageId":"125","endLine":3,"endColumn":18},{"ruleId":"122","severity":1,"message":"130","line":2,"column":20,"nodeType":"124","messageId":"125","endLine":2,"endColumn":24},{"ruleId":"122","severity":1,"message":"131","line":33,"column":30,"nodeType":"124","messageId":"125","endLine":33,"endColumn":38},{"ruleId":"122","severity":1,"message":"132","line":33,"column":46,"nodeType":"124","messageId":"125","endLine":33,"endColumn":53},{"ruleId":"122","severity":1,"message":"133","line":34,"column":33,"nodeType":"124","messageId":"125","endLine":34,"endColumn":44},{"ruleId":"122","severity":1,"message":"134","line":34,"column":52,"nodeType":"124","messageId":"125","endLine":34,"endColumn":62},{"ruleId":"135","severity":1,"message":"136","line":62,"column":7,"nodeType":"137","endLine":62,"endColumn":29,"suggestions":"138"},{"ruleId":"122","severity":1,"message":"139","line":1,"column":16,"nodeType":"124","messageId":"125","endLine":1,"endColumn":24},{"ruleId":"122","severity":1,"message":"140","line":7,"column":22,"nodeType":"124","messageId":"125","endLine":7,"endColumn":26},{"ruleId":"141","severity":1,"message":"142","line":11,"column":4,"nodeType":"143","endLine":11,"endColumn":48},{"ruleId":"141","severity":1,"message":"142","line":12,"column":4,"nodeType":"143","endLine":12,"endColumn":47},{"ruleId":"141","severity":1,"message":"142","line":13,"column":4,"nodeType":"143","endLine":13,"endColumn":46},{"ruleId":"122","severity":1,"message":"131","line":9,"column":33,"nodeType":"124","messageId":"125","endLine":9,"endColumn":41},{"ruleId":"122","severity":1,"message":"132","line":9,"column":49,"nodeType":"124","messageId":"125","endLine":9,"endColumn":56},{"ruleId":"122","severity":1,"message":"144","line":10,"column":12,"nodeType":"124","messageId":"125","endLine":10,"endColumn":25},{"ruleId":"122","severity":1,"message":"133","line":10,"column":36,"nodeType":"124","messageId":"125","endLine":10,"endColumn":47},{"ruleId":"122","severity":1,"message":"134","line":10,"column":55,"nodeType":"124","messageId":"125","endLine":10,"endColumn":65},{"ruleId":"122","severity":1,"message":"145","line":11,"column":36,"nodeType":"124","messageId":"125","endLine":11,"endColumn":47},{"ruleId":"122","severity":1,"message":"146","line":11,"column":55,"nodeType":"124","messageId":"125","endLine":11,"endColumn":65},{"ruleId":"122","severity":1,"message":"147","line":34,"column":15,"nodeType":"124","messageId":"125","endLine":34,"endColumn":22},{"ruleId":"122","severity":1,"message":"148","line":35,"column":15,"nodeType":"124","messageId":"125","endLine":35,"endColumn":18},{"ruleId":"122","severity":1,"message":"139","line":1,"column":16,"nodeType":"124","messageId":"125","endLine":1,"endColumn":24},{"ruleId":"122","severity":1,"message":"149","line":1,"column":26,"nodeType":"124","messageId":"125","endLine":1,"endColumn":35},{"ruleId":"122","severity":1,"message":"149","line":1,"column":26,"nodeType":"124","messageId":"125","endLine":1,"endColumn":35},{"ruleId":"122","severity":1,"message":"130","line":2,"column":20,"nodeType":"124","messageId":"125","endLine":2,"endColumn":24},{"ruleId":"122","severity":1,"message":"127","line":6,"column":8,"nodeType":"124","messageId":"125","endLine":6,"endColumn":22},{"ruleId":"122","severity":1,"message":"150","line":15,"column":22,"nodeType":"124","messageId":"125","endLine":15,"endColumn":27},{"ruleId":"122","severity":1,"message":"134","line":15,"column":35,"nodeType":"124","messageId":"125","endLine":15,"endColumn":45},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'QUERY_ME' is defined but never used.","'InstrumentList' is defined but never used.","'useParams' is defined but never used.","'useQuery' is defined but never used.","'Link' is defined but never used.","'addError' is assigned a value but never used.","'addData' is assigned a value but never used.","'updateError' is assigned a value but never used.","'updateData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'posts'. Either include it or remove the dependency array.","ArrayExpression",["153"],"'useState' is defined but never used.","'data' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'updateComment' is assigned a value but never used.","'deleteError' is assigned a value but never used.","'deleteData' is assigned a value but never used.","'content' is assigned a value but never used.","'_id' is assigned a value but never used.","'useEffect' is defined but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},"Update the dependencies array to be: [instruments, posts, rhythms]",{"range":"156","text":"157"},[1894,1916],"[instruments, posts, rhythms]"]