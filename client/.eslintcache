[{"/Users/ismaelmoran/Project-3/client/src/index.js":"1","/Users/ismaelmoran/Project-3/client/src/App.js":"2","/Users/ismaelmoran/Project-3/client/src/pages/Login.js":"3","/Users/ismaelmoran/Project-3/client/src/components/Post.js":"4","/Users/ismaelmoran/Project-3/client/src/components/Navbar.js":"5","/Users/ismaelmoran/Project-3/client/src/pages/Signup.js":"6","/Users/ismaelmoran/Project-3/client/src/pages/Home.js":"7","/Users/ismaelmoran/Project-3/client/src/pages/Profile.js":"8","/Users/ismaelmoran/Project-3/client/src/components/InstrumentList.js":"9","/Users/ismaelmoran/Project-3/client/src/utils/auth.js":"10","/Users/ismaelmoran/Project-3/client/src/components/RhythmFilter.js":"11","/Users/ismaelmoran/Project-3/client/src/components/Feed.js":"12","/Users/ismaelmoran/Project-3/client/src/utils/mutations.js":"13","/Users/ismaelmoran/Project-3/client/src/utils/queries.js":"14"},{"size":222,"mtime":1636830024296,"results":"15","hashOfConfig":"16"},{"size":2054,"mtime":1637124984522,"results":"17","hashOfConfig":"16"},{"size":3679,"mtime":1637125474271,"results":"18","hashOfConfig":"16"},{"size":5109,"mtime":1637033503424,"results":"19","hashOfConfig":"16"},{"size":2141,"mtime":1637119918009,"results":"20","hashOfConfig":"16"},{"size":4933,"mtime":1637033503425,"results":"21","hashOfConfig":"16"},{"size":1239,"mtime":1637121874774,"results":"22","hashOfConfig":"16"},{"size":3546,"mtime":1637033503425,"results":"23","hashOfConfig":"16"},{"size":742,"mtime":1636830024295,"results":"24","hashOfConfig":"16"},{"size":1084,"mtime":1636830024298,"results":"25","hashOfConfig":"16"},{"size":1426,"mtime":1637033503424,"results":"26","hashOfConfig":"16"},{"size":3584,"mtime":1637033503423,"results":"27","hashOfConfig":"16"},{"size":1079,"mtime":1637033503426,"results":"28","hashOfConfig":"16"},{"size":1286,"mtime":1637033503428,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"2vpt7l",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/ismaelmoran/Project-3/client/src/index.js",[],["62","63"],"/Users/ismaelmoran/Project-3/client/src/App.js",[],"/Users/ismaelmoran/Project-3/client/src/pages/Login.js",[],"/Users/ismaelmoran/Project-3/client/src/components/Post.js",["64","65","66","67","68"],"import React, {useState} from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { QUERY_RHYTHMS, QUERY_POST } from '../utils/queries';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { UPDATE_POST, ADD_POST } from '../utils/mutations';\nimport { useParams } from 'react-router-dom';\n\nimport Auth from '../utils/auth';\n\nconst Post = () => {\n\n\n\n    const { postId } = useParams();\n\n    const {loading: rhythmLoad, data: rhythmData} = useQuery(QUERY_RHYTHMS);\n    const {loading: postLoad, data: postData} = useQuery(QUERY_POST, {\n            variables: {postId: postId}\n        });\n\n    const [formState, setFormState] = useState({\n            content: \"\",\n            url: \"\",\n            title: \"\",\n            rhythm: \"\"\n          });\n\n\n        //   const [formState, setFormState] = useState({\n        //     ...postData\n        //   });\n\n    const [addPost, { error: addError, data: addData }] = useMutation(ADD_POST);\n    const [updatePost, { error: updateError, data: updateData }] = useMutation(UPDATE_POST);\n    \n    if (!Auth.loggedIn()) {\n        return <Redirect to=\"/login\" />;\n      }\n      \n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setFormState({\n            ...formState,\n            [name]: value,\n        });\n        };\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        console.log(formState);\n\n        try {\n            if(postData.post._id){\n                const userId = postData.post.user._id\n                console.log(userId)\n                 await updatePost({\n                    variables: { ...formState, user:postData.post.user._id, _id:postData.post._id  },\n                    });\n                    console.log(\"UpdatePost\")\n                    return <Redirect to=\"/profile/me\" />;\n            } else {\n                 await addPost({\n                    variables: { ...formState },\n                    });\n                    console.log(\"AddPost\")\n                    return <Redirect to=\"/\" />;\n            }\n\n            \n            \n        } catch (e) {\n            console.error(e);\n        }\n        };\n\n\nlet canEdit\nlet rhythmId = null\n   if (postLoad || rhythmLoad) {\n    return <div>Loading...</div>;\n  }\n\n  if (postData.post._id){\n        canEdit = true;\n        rhythmId = postData.post.rhythm._id\n   } else {\n        canEdit = false\n   }\n\n\nreturn (\n<div className=\"py-12\">\n    <div className=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n        <div className=\"bg-white overflow-hidden shadow-lg sm:rounded-lg\">\n            <div className=\"p-6 bg-white border-b border-gray-200\">\n                <h1 className=\"np-title mb-8 text-3xl font-bold\">{canEdit ? \"EDIT POST\" : \"NEW POST\"}</h1>\n                <form id='newPost-form' onSubmit={handleFormSubmit}>\n                    <div className=\"mb-4\">\n                        <label className=\"text-xl text-gray-600\">Title<span className=\"text-red-500\">*</span></label>\n                        <input type=\"text\" onLoad={handleChange} onChange={handleChange} className=\"rounded-lg border-2 border-gray-300 p-2 w-full\" name=\"title\" id=\"title\" defaultValue={canEdit ? postData.post.title : \"\"} required />\n                    </div>\n                    <div>\n                        <label className=\"text-xl text-gray-600\">Rhythm</label>\n                        <select id='rhythm' name=\"rhythm\" onLoad={handleChange} onChange={handleChange} className=\"w-full border-gray-300 rounded-md shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" defaultValue={rhythmId} >\n                \n                                    {(rhythmData.rhythms.map((rhythm, index)=> {\n                                        return (<option key={index} value={rhythm._id}>{rhythm.name}</option>)\n                                    }))}\n                        </select>\n                    </div>\n                    <div className=\"mb-4\">\n                        <label className=\"text-xl text-gray-600\">Content<span className=\"text-red-500\">*</span></label>\n                        <textarea id='content' defaultValue={postData ? postData.post.content : \"\"} onLoad={handleChange} onChange={handleChange} name=\"content\" className=\"rounded-lg border-2 border-gray-500\">\n                                \n                        </textarea>\n                    </div>\n                    <div className=\"mb-8\">\n                        <label className=\"text-xl text-gray-600\">URL</label>\n                        <input type=\"text\" onLoad={handleChange} onChange={handleChange} className=\"rounded-lg border-2 border-gray-300 p-2 w-full\" defaultValue={postData.post.url} name=\"url\" id=\"url\" placeholder=\"(Optional)\"/>\n                    </div>\n                    <div className=\"flex flex-row-reverse p-1\">\n                        <button type=\"submit\" className=\"w-3/12 rounded-lg p-3 bg-black text-white hover:bg-yellow-500\" required>Submit</button>\n                    </div>\n                </form>    \n            </div>\n        </div>\n    </div>\n</div>\n)}\n\nexport default Post;","/Users/ismaelmoran/Project-3/client/src/components/Navbar.js",[],"/Users/ismaelmoran/Project-3/client/src/pages/Signup.js",[],"/Users/ismaelmoran/Project-3/client/src/pages/Home.js",["69","70"],"/Users/ismaelmoran/Project-3/client/src/pages/Profile.js",["71","72","73","74"],"import React from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport { QUERY_USER, QUERY_ME } from '../utils/queries';\nimport InstrumentList from '../components/InstrumentList';\nimport Feed from '../components/Feed';\n\nimport Auth from '../utils/auth';\n\nconst Profile = () => {\n  const { userName } = useParams();\n\n  const { loading, data } = useQuery(QUERY_USER, {\n    variables: { userName },\n  });\n\n  // Enable Editting if userParam matches username\n  let canEdit = false\n  if (Auth.loggedIn() && Auth.getProfile().data.userName === userName) {\n    console.log(\"You can edit this profile now\")\n    canEdit = true;\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!Auth.loggedIn()) {\n    return (\n      <h4>\n        You need to be logged in to see this. Use the navigation links above to\n        sign up or log in!\n      </h4>\n    );\n  }\n\n  return (\n  <div className=\"container mx-auto p-5 grid grid-row-2 ml-12\">\n      <div className=\"md:flex no-wrap md:-mx-2 \">\n          <div className=\"w-full md:w-3/12 md:mx-2\">\n              <div className=\"bg-white p-3\">\n                  <h1 className=\"text-2xl text-gray-700 font-bold\">{userName}'s Profile</h1>\n              </div>\n              <div className=\"bg-white p-3 border-t-4 border-yellow-500 rounded-lg shadow-lg\">\n                  <div className=\"image overflow-hidden\">\n                  {canEdit && (<a href=\"#\" title=\"Click to change profile picture\">Edit Picture</a>)}\n                      <img className=\"h-auto w-full mx-auto rounded-full\"\n                          src={data.user.img}\n                          alt=\"profilepic\"/>\n                  </div>\n                  <h1 className=\"text-gray-900 font-bold text-xl leading-8 my-1\">{`${data.user.firstName} ${data.user.lastName}`}</h1>\n                  <h3 className=\"text-blue-600 font-lg text-semibold leading-6 mb-2\">Username: <span className=\"text-black\">{data.user.userName}</span></h3>\n                  <p className=\"text-lg text-grey-500 leading-6 font-semibold\">About me: {canEdit && (<a href=\"/editPost\" className=\"text-sm text-blue-500 underline\">edit</a>)} </p><span className=\"font-small text-base\">{data.user.bio}</span>\n              </div>\n              <div className=\"my-4 \"></div>\n              <div class=\"flex items-center space-x-3 font-bold text-gray-700 text-2xl leading-8 mb-4\">\n        <span>Instruments</span>\n    </div>\n    <div class=\"bg-white p-1 rounded-lg shadow-lg\">\n        <div class=\"flex items-center space-x-3 font-semibold text-gray-900 text-2xl leading-8 mb-4 underline\">\n        </div>\n        {/* {data.user.instrument} */}\n        {data.user.instruments.map((instrument) => {\n              return (<div class=\"grid grid-cols-3 gap-1 mb-2\">\n                  <div class=\"rounded-lg bg-yellow-500 text-center\">{instrument.name}</div>\n              </div>)\n        })}\n    </div>\n          </div>\n          <div className=\"w-full md:w-9/12 mx-2 my-16 h-64 shadow-lg mb-2\">\n              <div className=\"bg-white p-3 shadow-lg rounded-lg \">\n                  <div className=\"flex items-center space-x-2 text-gray-900 leading-8\">\n                      <span className=\"tracking-wide text-xl font-semibold\">Previous Posts</span>\n                  </div>\n                  <div className=\"text-gray-700\">\n              <div className=\"my-4\"></div>\n              <Feed user={data.user._id}/>          \n              </div>\n          </div>\n      </div>\n    </div>\n  </div>\n  );\n};\n\nexport default Profile;\n","/Users/ismaelmoran/Project-3/client/src/components/InstrumentList.js",["75","76"],"import React from 'react';\nimport { QUERY_INSTRUMENTS } from '../utils/queries';\nimport { useQuery } from '@apollo/client';\n\nconst InstrumentList = () => {\n\n    const { loading, data } = useQuery(QUERY_INSTRUMENTS);\n\n\n  return (\n<>\n    <div class=\"flex items-center space-x-3 font-bold text-gray-700 text-2xl leading-8 mb-4\">\n        <span>Instruments</span>\n    </div>\n    <div class=\"bg-white p-1 rounded-lg shadow-lg\">\n        <div class=\"flex items-center space-x-3 font-semibold text-gray-900 text-2xl leading-8 mb-4 underline\">\n        </div>\n        <div class=\"grid grid-cols-3 gap-1 mb-2\">\n            <div class=\"rounded-lg bg-yellow-500 text-center\">Banjo</div>\n        </div>\n    </div>\n</>\n  )};\n\n  export default InstrumentList;","/Users/ismaelmoran/Project-3/client/src/utils/auth.js",[],"/Users/ismaelmoran/Project-3/client/src/components/RhythmFilter.js",[],"/Users/ismaelmoran/Project-3/client/src/components/Feed.js",[],"/Users/ismaelmoran/Project-3/client/src/utils/mutations.js",[],"/Users/ismaelmoran/Project-3/client/src/utils/queries.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":2,"column":20,"nodeType":"83","messageId":"84","endLine":2,"endColumn":24},{"ruleId":"81","severity":1,"message":"85","line":33,"column":30,"nodeType":"83","messageId":"84","endLine":33,"endColumn":38},{"ruleId":"81","severity":1,"message":"86","line":33,"column":46,"nodeType":"83","messageId":"84","endLine":33,"endColumn":53},{"ruleId":"81","severity":1,"message":"87","line":34,"column":33,"nodeType":"83","messageId":"84","endLine":34,"endColumn":44},{"ruleId":"81","severity":1,"message":"88","line":34,"column":52,"nodeType":"83","messageId":"84","endLine":34,"endColumn":62},{"ruleId":"81","severity":1,"message":"89","line":2,"column":20,"nodeType":"83","messageId":"84","endLine":2,"endColumn":29},{"ruleId":"81","severity":1,"message":"90","line":3,"column":10,"nodeType":"83","messageId":"84","endLine":3,"endColumn":18},{"ruleId":"81","severity":1,"message":"91","line":2,"column":10,"nodeType":"83","messageId":"84","endLine":2,"endColumn":18},{"ruleId":"81","severity":1,"message":"92","line":5,"column":22,"nodeType":"83","messageId":"84","endLine":5,"endColumn":30},{"ruleId":"81","severity":1,"message":"93","line":6,"column":8,"nodeType":"83","messageId":"84","endLine":6,"endColumn":22},{"ruleId":"94","severity":1,"message":"95","line":47,"column":32,"nodeType":"96","endLine":47,"endColumn":84},{"ruleId":"81","severity":1,"message":"97","line":7,"column":13,"nodeType":"83","messageId":"84","endLine":7,"endColumn":20},{"ruleId":"81","severity":1,"message":"98","line":7,"column":22,"nodeType":"83","messageId":"84","endLine":7,"endColumn":26},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'addError' is assigned a value but never used.","'addData' is assigned a value but never used.","'updateError' is assigned a value but never used.","'updateData' is assigned a value but never used.","'useParams' is defined but never used.","'useQuery' is defined but never used.","'Redirect' is defined but never used.","'QUERY_ME' is defined but never used.","'InstrumentList' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'loading' is assigned a value but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]