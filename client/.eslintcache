[{"C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\index.js":"1","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\App.js":"2","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\pages\\Profile.js":"3","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\components\\Post.js":"4","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\pages\\Signup.js":"5","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\pages\\Login.js":"6","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\pages\\Home.js":"7","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\components\\Navbar.js":"8","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\components\\InstrumentList.js":"9","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\utils\\auth.js":"10","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\components\\Feed.js":"11","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\utils\\mutations.js":"12","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\utils\\queries.js":"13","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\components\\RhythmFilter.js":"14"},{"size":233,"mtime":1636606783002,"results":"15","hashOfConfig":"16"},{"size":2108,"mtime":1636917215012,"results":"17","hashOfConfig":"16"},{"size":3556,"mtime":1637118235492,"results":"18","hashOfConfig":"16"},{"size":5240,"mtime":1637032621351,"results":"19","hashOfConfig":"16"},{"size":5025,"mtime":1637032621353,"results":"20","hashOfConfig":"16"},{"size":3723,"mtime":1636691175616,"results":"21","hashOfConfig":"16"},{"size":1229,"mtime":1637118654938,"results":"22","hashOfConfig":"16"},{"size":2194,"mtime":1637117158506,"results":"23","hashOfConfig":"16"},{"size":766,"mtime":1636609035933,"results":"24","hashOfConfig":"16"},{"size":1126,"mtime":1636690785473,"results":"25","hashOfConfig":"16"},{"size":3659,"mtime":1637032621348,"results":"26","hashOfConfig":"16"},{"size":1120,"mtime":1636955985515,"results":"27","hashOfConfig":"16"},{"size":1377,"mtime":1636955985518,"results":"28","hashOfConfig":"16"},{"size":1459,"mtime":1637030981036,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1719h79",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\index.js",[],["61","62"],"C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\App.js",[],"C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\pages\\Profile.js",["63","64","65"],"C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\components\\Post.js",["66","67","68","69","70"],"import React, {useState} from 'react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport { QUERY_RHYTHMS, QUERY_POST } from '../utils/queries';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { UPDATE_POST, ADD_POST } from '../utils/mutations';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst Post = () => {\r\n\r\n\r\n\r\n    const { postId } = useParams();\r\n\r\n    const {loading: rhythmLoad, data: rhythmData} = useQuery(QUERY_RHYTHMS);\r\n    const {loading: postLoad, data: postData} = useQuery(QUERY_POST, {\r\n            variables: {postId: postId}\r\n        });\r\n\r\n    const [formState, setFormState] = useState({\r\n            content: \"\",\r\n            url: \"\",\r\n            title: \"\",\r\n            rhythm: \"\"\r\n          });\r\n\r\n\r\n        //   const [formState, setFormState] = useState({\r\n        //     ...postData\r\n        //   });\r\n\r\n    const [addPost, { error: addError, data: addData }] = useMutation(ADD_POST);\r\n    const [updatePost, { error: updateError, data: updateData }] = useMutation(UPDATE_POST);\r\n    \r\n    if (!Auth.loggedIn()) {\r\n        return <Redirect to=\"/login\" />;\r\n      }\r\n      \r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setFormState({\r\n            ...formState,\r\n            [name]: value,\r\n        });\r\n        };\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n        console.log(formState);\r\n\r\n        try {\r\n            if(postData.post._id){\r\n                const userId = postData.post.user._id\r\n                console.log(userId)\r\n                 await updatePost({\r\n                    variables: { ...formState, user:postData.post.user._id, _id:postData.post._id  },\r\n                    });\r\n                    console.log(\"UpdatePost\")\r\n                    return <Redirect to=\"/profile/me\" />;\r\n            } else {\r\n                 await addPost({\r\n                    variables: { ...formState },\r\n                    });\r\n                    console.log(\"AddPost\")\r\n                    return <Redirect to=\"/\" />;\r\n            }\r\n\r\n            \r\n            \r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n        };\r\n\r\n\r\nlet canEdit\r\nlet rhythmId = null\r\n   if (postLoad || rhythmLoad) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (postData.post._id){\r\n        canEdit = true;\r\n        rhythmId = postData.post.rhythm._id\r\n   } else {\r\n        canEdit = false\r\n   }\r\n\r\n\r\nreturn (\r\n<div className=\"py-12\">\r\n    <div className=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\r\n        <div className=\"bg-white overflow-hidden shadow-lg sm:rounded-lg\">\r\n            <div className=\"p-6 bg-white border-b border-gray-200\">\r\n                <h1 className=\"np-title mb-8 text-3xl font-bold\">{canEdit ? \"EDIT POST\" : \"NEW POST\"}</h1>\r\n                <form id='newPost-form' onSubmit={handleFormSubmit}>\r\n                    <div className=\"mb-4\">\r\n                        <label className=\"text-xl text-gray-600\">Title<span className=\"text-red-500\">*</span></label>\r\n                        <input type=\"text\" onLoad={handleChange} onChange={handleChange} className=\"rounded-lg border-2 border-gray-300 p-2 w-full\" name=\"title\" id=\"title\" defaultValue={canEdit ? postData.post.title : \"\"} required />\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"text-xl text-gray-600\">Rhythm</label>\r\n                        <select id='rhythm' name=\"rhythm\" onLoad={handleChange} onChange={handleChange} className=\"w-full border-gray-300 rounded-md shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" defaultValue={rhythmId} >\r\n                \r\n                                    {(rhythmData.rhythms.map((rhythm, index)=> {\r\n                                        return (<option key={index} value={rhythm._id}>{rhythm.name}</option>)\r\n                                    }))}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"mb-4\">\r\n                        <label className=\"text-xl text-gray-600\">Content<span className=\"text-red-500\">*</span></label>\r\n                        <textarea id='content' defaultValue={postData ? postData.post.content : \"\"} onLoad={handleChange} onChange={handleChange} name=\"content\" className=\"rounded-lg border-2 border-gray-500\">\r\n                                \r\n                        </textarea>\r\n                    </div>\r\n                    <div className=\"mb-8\">\r\n                        <label className=\"text-xl text-gray-600\">URL</label>\r\n                        <input type=\"text\" onLoad={handleChange} onChange={handleChange} className=\"rounded-lg border-2 border-gray-300 p-2 w-full\" defaultValue={postData.post.url} name=\"url\" id=\"url\" placeholder=\"(Optional)\"/>\r\n                    </div>\r\n                    <div className=\"flex flex-row-reverse p-1\">\r\n                        <button type=\"submit\" className=\"w-3/12 rounded-lg p-3 bg-black text-white hover:bg-yellow-500\" required>Submit</button>\r\n                    </div>\r\n                </form>    \r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n)}\r\n\r\nexport default Post;","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\pages\\Signup.js",[],"C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\pages\\Login.js",[],"C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\pages\\Home.js",["71","72"],"C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\components\\Navbar.js",[],"C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\components\\InstrumentList.js",["73","74"],"import React from 'react';\r\nimport { QUERY_INSTRUMENTS } from '../utils/queries';\r\nimport { useQuery } from '@apollo/client';\r\n\r\nconst InstrumentList = () => {\r\n\r\n    const { loading, data } = useQuery(QUERY_INSTRUMENTS);\r\n\r\n\r\n  return (\r\n<>\r\n    <div class=\"flex items-center space-x-3 font-bold text-gray-700 text-2xl leading-8 mb-4\">\r\n        <span>Instruments</span>\r\n    </div>\r\n    <div class=\"bg-white p-1 rounded-lg shadow-lg\">\r\n        <div class=\"flex items-center space-x-3 font-semibold text-gray-900 text-2xl leading-8 mb-4 underline\">\r\n        </div>\r\n        <div class=\"grid grid-cols-3 gap-1 mb-2\">\r\n            <div class=\"rounded-lg bg-yellow-500 text-center\">Banjo</div>\r\n        </div>\r\n    </div>\r\n</>\r\n  )};\r\n\r\n  export default InstrumentList;","C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\utils\\auth.js",[],"C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\components\\Feed.js",[],"C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\utils\\mutations.js",[],"C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\utils\\queries.js",[],"C:\\Users\\Luke\\Bootcamp\\Classwork\\24-Project-3\\Develop\\client\\src\\components\\RhythmFilter.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":2,"column":10,"nodeType":"81","messageId":"82","endLine":2,"endColumn":18},{"ruleId":"79","severity":1,"message":"83","line":5,"column":22,"nodeType":"81","messageId":"82","endLine":5,"endColumn":30},{"ruleId":"79","severity":1,"message":"84","line":6,"column":8,"nodeType":"81","messageId":"82","endLine":6,"endColumn":22},{"ruleId":"79","severity":1,"message":"85","line":2,"column":20,"nodeType":"81","messageId":"82","endLine":2,"endColumn":24},{"ruleId":"79","severity":1,"message":"86","line":33,"column":30,"nodeType":"81","messageId":"82","endLine":33,"endColumn":38},{"ruleId":"79","severity":1,"message":"87","line":33,"column":46,"nodeType":"81","messageId":"82","endLine":33,"endColumn":53},{"ruleId":"79","severity":1,"message":"88","line":34,"column":33,"nodeType":"81","messageId":"82","endLine":34,"endColumn":44},{"ruleId":"79","severity":1,"message":"89","line":34,"column":52,"nodeType":"81","messageId":"82","endLine":34,"endColumn":62},{"ruleId":"79","severity":1,"message":"90","line":2,"column":20,"nodeType":"81","messageId":"82","endLine":2,"endColumn":29},{"ruleId":"79","severity":1,"message":"91","line":3,"column":10,"nodeType":"81","messageId":"82","endLine":3,"endColumn":18},{"ruleId":"79","severity":1,"message":"92","line":7,"column":13,"nodeType":"81","messageId":"82","endLine":7,"endColumn":20},{"ruleId":"79","severity":1,"message":"93","line":7,"column":22,"nodeType":"81","messageId":"82","endLine":7,"endColumn":26},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'QUERY_ME' is defined but never used.","'InstrumentList' is defined but never used.","'Link' is defined but never used.","'addError' is assigned a value but never used.","'addData' is assigned a value but never used.","'updateError' is assigned a value but never used.","'updateData' is assigned a value but never used.","'useParams' is defined but never used.","'useQuery' is defined but never used.","'loading' is assigned a value but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]